<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>鹤别空山</title>
  
  <subtitle>余生遥遥</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.zhoulis.top/"/>
  <updated>2019-09-24T14:41:07.493Z</updated>
  <id>http://www.zhoulis.top/</id>
  
  <author>
    <name>zhou李</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Spring Boot实战】论坛项目（一）</title>
    <link href="http://www.zhoulis.top/spring-boot-shi-zhan-1"/>
    <id>http://www.zhoulis.top/spring-boot-shi-zhan-1</id>
    <published>2019-09-24T12:45:00.000Z</published>
    <updated>2019-09-24T14:41:07.493Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>此项目的主要意图时为了通过项目来学习Spring Boot。把书作为参考书，这样会很容易看到自己哪些地方薄弱再对症下药。</p><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><p>项目采用Spring Boot、JDK1.8开发。</p><p>会用到什么? </p><p><strong>Spring Boot , IDEA , Refactor , Git/Github , Bootstrap , Github Authorization , MySQL , MyBatis,………</strong></p><h3 id="快速搭建Spring-Boot项目"><a href="#快速搭建Spring-Boot项目" class="headerlink" title="快速搭建Spring Boot项目"></a>快速搭建Spring Boot项目</h3><p>使用IDEA很容易搭建一个Spring Boot项目 </p><p><img src="https://res.cloudinary.com/ds5gmzvbq/image/upload/v1569331167/blog/W9_24_VPPP___BHG4JNMA4_z3agbg.png" alt="新建SpringBoot"></p><p>在新建完成后就可以着手使用Github</p><h3 id="使用Github托管代码"><a href="#使用Github托管代码" class="headerlink" title="使用Github托管代码"></a>使用Github托管代码</h3><p>先创建一个仓库community</p><p><img src="https://res.cloudinary.com/ds5gmzvbq/image/upload/v1569331721/blog/QQ%E6%88%AA%E5%9B%BE20190924212722_urslfg.png" alt></p><p>在IDEA中打开Terminal：执行</p><p>git init （当前文件目录作为仓库）</p><p>git add . (全部文件丢到暂存里)</p><p>git commit -m “init repo” (提供commit信息)</p><p>git remote add origin 仓库的地址 (添加远程地址)</p><p>git push -u origin master  (提交到远程地址)</p><h3 id="Bootstrap-编写导航栏样式"><a href="#Bootstrap-编写导航栏样式" class="headerlink" title="Bootstrap 编写导航栏样式"></a>Bootstrap 编写导航栏样式</h3><p>​    为了降低学习成本直接去官网下载Bootstrap来快速实现前端功能</p><p><a href="https://v3.bootcss.com/getting-started/" target="_blank" rel="noopener">Bootstrap下载</a></p><p><img src="https://res.cloudinary.com/ds5gmzvbq/image/upload/v1569332768/blog/bootstrap_cpsjjn.png" alt></p><p>下载Bootstrap将内文件复制到项目src\main\resources\static文件夹下新建index.html文件</p><p>将Bootstrap引入到index.html中</p><p><img src="https://res.cloudinary.com/ds5gmzvbq/image/upload/v1569333082/blog/index1_u0l5su.png" alt></p><p><a href="https://v3.bootcss.com/components/" target="_blank" rel="noopener">Bootstrap</a>组件标签里选择导航条：</p><p>复制导航条中第一个实例代码到index.html<body>元素中修改其中内容：</body></p><pre><code>&lt;nav class=&quot;navbar navbar-default&quot;&gt;    &lt;div class=&quot;container-fluid&quot;&gt;        &lt;div class=&quot;navbar-header&quot;&gt;            &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot;                    data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;                &lt;span class=&quot;sr-only&quot;&gt;Code社区&lt;/span&gt;            &lt;/button&gt;            &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Code社区&lt;/a&gt;        &lt;/div&gt;        &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&gt;            &lt;form class=&quot;navbar-form navbar-left&quot;&gt;                &lt;div class=&quot;form-group&quot;&gt;                    &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;搜索话题&quot;&gt;                &lt;/div&gt;                &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;搜索&lt;/button&gt;            &lt;/form&gt;            &lt;ul class=&quot;nav navbar-nav navbar-right&quot;&gt;                &lt;li&gt;&lt;a href=&quot;https://github.com/login/oauth/authorize?client_id=75b0ed1277b782ab053d&amp;redirect_uri=http://localhost:8887/callback&amp;scope=user&amp;state=1&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;                &lt;li class=&quot;dropdown&quot;&gt;                    &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot;                       aria-expanded=&quot;false&quot;&gt;我 &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;                    &lt;ul class=&quot;dropdown-menu&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;消息中心&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;个人资料&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;退出登录&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/li&gt;            &lt;/ul&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/nav&gt;</code></pre><h3 id="实现登录功能"><a href="#实现登录功能" class="headerlink" title="实现登录功能"></a>实现登录功能</h3><h5 id="注册Github-App"><a href="#注册Github-App" class="headerlink" title="注册Github App"></a>注册Github App</h5><p>Setting-&gt; Developer settings-&gt;OAuthApps</p><p><img src="https://res.cloudinary.com/ds5gmzvbq/image/upload/v1569333834/blog/OAuth_dfrwwc.png" alt></p><p>这里的URL对应上文index.html中的链接地址</p><h5 id="图解Github登录流程"><a href="#图解Github登录流程" class="headerlink" title="图解Github登录流程"></a>图解Github登录流程</h5><p><img src="https://res.cloudinary.com/ds5gmzvbq/image/upload/v1569334740/blog/%E6%97%B6%E5%BA%8F%E5%9B%BE_dul90y.png" alt></p><p>：用户访问code社区进行登录操作 code社区会调用Github的authorize接口去访问Github，这时候Github会直接跳转回给他携带的redirect-uri并且携带一个code 当code社区接受到这个code时会再次调用Github的access-token并且携带刚刚传回的code。这步是为了去获取token。如果验证成功Github会直接返回access-token。code社区再次使用access-token调用Github的User API 这样就可以获取到Github的user信息。这个时候就可以更新登录状态。返回用户登陆成功！</p><h3 id="测试登录功能"><a href="#测试登录功能" class="headerlink" title="测试登录功能"></a>测试登录功能</h3><p>创建个简单的控制器</p><pre><code>@Controllerpublic class IndexController {    @GetMapping(&quot;/&quot;)    public String index() {        return &quot;index&quot;;    }}</code></pre><p>运行项目：在浏览器中输入：<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a></p><p><img src="https://res.cloudinary.com/ds5gmzvbq/image/upload/v1569335771/blog/%E5%AF%BC%E8%88%AA%E6%A0%8F_wsojsp.png" alt></p><p>点击登录拉取Github登录此网站</p><p><img src="https://res.cloudinary.com/ds5gmzvbq/image/upload/v1569335977/blog/QQ%E6%88%AA%E5%9B%BE20190924223849_qbtmbj.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;此项目的主要意图时为了通过项目来学习Spring Boot。把书作为参考书，这样会很容易看到自己哪些地方薄弱再对症下药。&lt;/p&gt;
&lt;h3 i
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://www.zhoulis.top/categories/SpringBoot/"/>
    
    
      <category term="java" scheme="http://www.zhoulis.top/tags/java/"/>
    
      <category term="SpringBoot" scheme="http://www.zhoulis.top/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 基础(基于XML配置)</title>
    <link href="http://www.zhoulis.top/spring-mvc-ji-chu-ji-yu-xml-pei-zhi"/>
    <id>http://www.zhoulis.top/spring-mvc-ji-chu-ji-yu-xml-pei-zhi</id>
    <published>2019-09-19T01:25:00.000Z</published>
    <updated>2019-09-22T03:16:26.315Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-MVC-基础（基于-XML-配置）"><a href="#Spring-MVC-基础（基于-XML-配置）" class="headerlink" title="Spring MVC 基础（基于 XML 配置）"></a>Spring MVC 基础（基于 XML 配置）</h1><h2 id="一、搭建-Hello-Spring-工程"><a href="#一、搭建-Hello-Spring-工程" class="headerlink" title="一、搭建 Hello Spring 工程"></a>一、搭建 Hello Spring 工程</h2><h3 id="1-1-构建-Web-项目"><a href="#1-1-构建-Web-项目" class="headerlink" title="1.1 构建 Web 项目"></a>1.1 构建 Web 项目</h3><p>1.新建 maven web 工程，并引入相应的依赖：</p><pre><code>&lt;properties&gt;    &lt;spring-base-version&gt;5.1.3.RELEASE&lt;/spring-base-version&gt;&lt;/properties&gt;&lt;dependencies&gt;    &lt;dependency&gt;        &lt;groupId&gt;org.springframework&lt;/groupId&gt;        &lt;artifactId&gt;spring-context&lt;/artifactId&gt;        &lt;version&gt;${spring-base-version}&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;        &lt;groupId&gt;org.springframework&lt;/groupId&gt;        &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;        &lt;version&gt;${spring-base-version}&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;        &lt;groupId&gt;org.springframework&lt;/groupId&gt;        &lt;artifactId&gt;spring-core&lt;/artifactId&gt;        &lt;version&gt;${spring-base-version}&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;        &lt;groupId&gt;org.springframework&lt;/groupId&gt;        &lt;artifactId&gt;spring-web&lt;/artifactId&gt;        &lt;version&gt;${spring-base-version}&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;        &lt;groupId&gt;org.springframework&lt;/groupId&gt;        &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;        &lt;version&gt;${spring-base-version}&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;        &lt;groupId&gt;javax.servlet&lt;/groupId&gt;        &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;        &lt;version&gt;4.0.1&lt;/version&gt;        &lt;scope&gt;provided&lt;/scope&gt;    &lt;/dependency&gt;&lt;/dependencies&gt;</code></pre><p>2.在 <code>web.xml</code> 中配置前端控制器：</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;         xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;         version=&quot;3.1&quot;&gt;    &lt;!--配置 spring 前端控制器--&gt;    &lt;servlet&gt;        &lt;servlet-name&gt;springMvc&lt;/servlet-name&gt;        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;        &lt;init-param&gt;            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;            &lt;param-value&gt;classpath:springApplication.xml&lt;/param-value&gt;        &lt;/init-param&gt;        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;    &lt;/servlet&gt;    &lt;servlet-mapping&gt;        &lt;servlet-name&gt;springMvc&lt;/servlet-name&gt;        &lt;url-pattern&gt;/&lt;/url-pattern&gt;    &lt;/servlet-mapping&gt;&lt;/web-app&gt;</code></pre><p>3.在 resources 下新建 <code>springApplication.xml</code> 文件，文件内容如下：</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;       xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd&quot;&gt;    &lt;!-- 开启注解包扫描--&gt;    &lt;context:component-scan base-package=&quot;top.zhoulis.*&quot;/&gt;    &lt;!--使用默认的 Servlet 来响应静态文件 详见 1.2 --&gt;    &lt;mvc:default-servlet-handler/&gt;    &lt;!-- 开启注解驱动 详见 1.2 --&gt;    &lt;mvc:annotation-driven/&gt;    &lt;!-- 配置视图解析器 --&gt;    &lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;          id=&quot;internalResourceViewResolver&quot;&gt;        &lt;!-- 前缀 --&gt;        &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/jsp/&quot;/&gt;        &lt;!-- 后缀 --&gt;        &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;/&gt;    &lt;/bean&gt;&lt;/beans&gt;</code></pre><p>4.新建 Controller 用于测试整体配置是否成功：</p><pre><code>@Controller@RequestMapping(&quot;mvc&quot;)public class HelloController {    @RequestMapping(&quot;hello&quot;)    private String hello() {        return &quot;hello&quot;;    }}</code></pre><p>5.在 WEB-INF 下新建 jsp 文件夹，并创建一个简单的 hello.jsp 文件：</p><pre><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    Hello Spring MVC!&lt;/body&gt;&lt;/html&gt;</code></pre><p>6.启动 tomcat 服务，访问的服务地址为：localhost:8080/mvc/hello</p><h3 id="1-2-相关配置讲解"><a href="#1-2-相关配置讲解" class="headerlink" title="1.2 相关配置讲解"></a>1.2 相关配置讲解</h3><h4 id="1-mvc-default-servlet-handler"><a href="#1-mvc-default-servlet-handler" class="headerlink" title="1.mvc:default-servlet-handler/"></a>1.<a href="mvc:default-servlet-handler/" target="_blank" rel="noopener">mvc:default-servlet-handler/</a></h4><p>在上面的 web.xml 配置中，我们将 DispatcherServlet 的拦截路径设置为 <code>\</code>，此时 spring 会捕获所有 web 请求，包括对静态资源的请求，此时对 <code>.css</code> , <code>.js</code> 等文件的请求都会被拦截，为了正确处理静态资源的请求，spring 提供了两种解决方案：</p><ul><li><p><strong>配置 <a href="mvc:default-servlet-handler/" target="_blank" rel="noopener">mvc:default-servlet-handler/</a></strong> ： 配置后 Spring 会自动在上下文中定义一个 DefaultServletHttpRequestHandler，它会对所有进入 DispatcherServlet 的 URL 进行筛查，如果发现是静态资源的请求，就将该请求转发给 Web 应用服务器默认的 Servlet 处理，如果不是静态资源的请求，则仍由 DispatcherServlet 继续处理。</p></li><li><p><strong>配置 &lt;mvc:resources /&gt;</strong> ：通过指定静态资源的位置和路径映射来避免其被拦截，配置示例如下：</p><pre><code>&lt;mvc:resources location=&quot;/img/&quot; mapping=&quot;/img/**&quot;/&gt;   &lt;mvc:resources location=&quot;/js/&quot; mapping=&quot;/js/**&quot;/&gt;    &lt;mvc:resources location=&quot;/css/&quot; mapping=&quot;/css/**&quot;/&gt;  </code></pre></li></ul><h4 id="2-mvc-annotation-driven"><a href="#2-mvc-annotation-driven" class="headerlink" title="2.mvc:annotation-driven/"></a>2.<a href="mvc:annotation-driven/" target="_blank" rel="noopener">mvc:annotation-driven/</a></h4><p>该配置会自动注册 DefaultAnnotationHandlerMapping 与 AnnotationMethodHandlerAdapter 两个 bean，用以支持 @Controller 注解，并额外提供了数据绑定、参数转换、json 转换等功能。</p><h2 id="二、配置自定义拦截器"><a href="#二、配置自定义拦截器" class="headerlink" title="二、配置自定义拦截器"></a>二、配置自定义拦截器</h2><p>1.创建自定义拦截器，实现接口 HandlerInterceptor（这里我们创建两个拦截器，用于测试拦截器的执行顺序）：</p><pre><code>public class MyFirstInterceptor implements HandlerInterceptor {    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {        System.out.println(&quot;进入第一个拦截器 preHandle&quot;);        return true;    }    // 需要注意的是，如果对应的程序报错，不一定会进入这个方法 但一定会进入 afterCompletion 这个方法    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) {        System.out.println(&quot;进入第一个拦截器 postHandle&quot;);    }    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {        System.out.println(&quot;进入第一个拦截器 afterCompletion&quot;);    }}public class MySecondInterceptor implements HandlerInterceptor {    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {        System.out.println(&quot;进入第二个拦截器 preHandle&quot;);        return true;    }    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) {        System.out.println(&quot;进入第二个拦截器 postHandle&quot;);    }    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {        System.out.println(&quot;进入第二个拦截器 afterCompletion&quot;);    }}</code></pre><p>2.在 <code>springApplication.xml</code> 中注册自定义拦截器：</p><pre><code>&lt;!--配置拦截器--&gt;&lt;mvc:interceptors&gt;    &lt;mvc:interceptor&gt;        &lt;mvc:mapping path=&quot;/mvc/**&quot;/&gt;        &lt;mvc:exclude-mapping path=&quot;/mvc/login&quot;/&gt;        &lt;bean class=&quot;com.heibaiying.interceptors.MyFirstInterceptor&quot;/&gt;    &lt;/mvc:interceptor&gt;    &lt;mvc:interceptor&gt;        &lt;mvc:mapping path=&quot;/mvc/**&quot;/&gt;        &lt;bean class=&quot;com.heibaiying.interceptors.MySecondInterceptor&quot;/&gt;    &lt;/mvc:interceptor&gt;&lt;/mvc:interceptors&gt;</code></pre><p><strong>3. 关于多个拦截器方法执行顺序的说明</strong></p><p>拦截器的执行顺序是按声明的先后顺序执行的，先声明的拦截器中的 preHandle 方法会先执行，然而它的 postHandle 方法和 afterCompletion 方法却会后执行。</p><h2 id="三、全局异常处理"><a href="#三、全局异常处理" class="headerlink" title="三、全局异常处理"></a>三、全局异常处理</h2><p>1.定义自定义异常：</p><pre><code>public class NoAuthException extends RuntimeException {    public NoAuthException() {        super();    }    public NoAuthException(String message) {        super(message);    }    public NoAuthException(String message, Throwable cause) {        super(message, cause);    }    public NoAuthException(Throwable cause) {        super(cause);    }}</code></pre><p>2.实现自定义异常处理器：</p><pre><code>public class NoAuthExceptionResolver implements HandlerExceptionResolver {    public ModelAndView resolveException(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {        if (ex instanceof NoAuthException &amp;&amp; !isAjax(request)) {            return new ModelAndView(&quot;NoAuthPage&quot;);        }        return new ModelAndView();    }    // 判断是否是 Ajax 请求    private boolean isAjax(HttpServletRequest request) {        return &quot;XMLHttpRequest&quot;.equalsIgnoreCase(request.getHeader(&quot;X-Requested-With&quot;));    }}</code></pre><p>3.在 <code>springApplication.xml</code> 注册自定义的异常处理器：</p><pre><code>&lt;!--配置全局异常处理器--&gt;&lt;bean class=&quot;com.heibaiying.exception.NoAuthExceptionResolver&quot;/&gt;</code></pre><p>4.创建测试 Controller，抛出自定义异常：</p><pre><code>@Controller@RequestMapping(&quot;mvc&quot;)public class HelloController {    @RequestMapping(&quot;hello&quot;)    private String hello() {        return &quot;hello&quot;;    }    @RequestMapping(&quot;auth&quot;)    private void auth() {        throw new NoAuthException(&quot;没有对应的访问权限！&quot;);    }}</code></pre><p>调用这个 Controller 时，同时可以验证在拦截器部分提到的：如果对应的程序报错，拦截器不一定会进入 postHandle 这个方法 但一定会进入 afterCompletion 这个方法。</p><h2 id="四、参数绑定"><a href="#四、参数绑定" class="headerlink" title="四、参数绑定"></a>四、参数绑定</h2><h3 id="4-1-参数绑定"><a href="#4-1-参数绑定" class="headerlink" title="4.1 参数绑定"></a>4.1 参数绑定</h3><p>1.新建 Programmer.java 作为测试实体类：</p><pre><code>/** * @Data 是 lombok 包下的注解，用来生成相应的 set、get 方法，使得类的书写更为简洁。 */@Datapublic class Programmer {    private String name;    private int age;    private float salary;    private String birthday;}</code></pre><p>2.新建 ParamBindController.java 文件，跳转到指定视图：</p><pre><code>@Controllerpublic class ParamBindController {    @InitBinder    protected void initBinder(WebDataBinder binder) {        binder.addCustomFormatter(new DateFormatter(&quot;yyyy-MM-dd HH:mm:ss&quot;));    }    // 参数绑定与日期格式转换    @RequestMapping(&quot;param&quot;)    public String param(String name, int age, double salary, @DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;) Date birthday, Model model) {        model.addAttribute(&quot;name&quot;, name);        model.addAttribute(&quot;age&quot;, age);        model.addAttribute(&quot;salary&quot;, salary);        model.addAttribute(&quot;birthday&quot;, birthday);        return &quot;param&quot;;    }    @RequestMapping(&quot;param2&quot;)    public String param2(String name, int age, double salary, Date birthday, Model model) {        model.addAttribute(&quot;name&quot;, name);        model.addAttribute(&quot;age&quot;, age);        model.addAttribute(&quot;salary&quot;, salary);        model.addAttribute(&quot;birthday&quot;, birthday);        return &quot;param&quot;;    }    @PostMapping(&quot;param3&quot;)    public String param3(Programmer programmer, String extendParam, Model model) {        System.out.println(&quot;extendParam&quot; + extendParam);        model.addAttribute(&quot;p&quot;, programmer);        return &quot;param&quot;;    }}</code></pre><p>3.新建 param.jsp 文件，用于测试数据在视图中的绑定情况：</p><pre><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;Restful&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;ul&gt;    &lt;li&gt;姓名：${empty name ? p.name : name}&lt;/li&gt;    &lt;li&gt;年龄：${empty age ? p.age : age}&lt;/li&gt;    &lt;li&gt;薪酬：${empty salary ? p.salary : salary}&lt;/li&gt;    &lt;li&gt;生日：${empty birthday ? p.birthday : birthday}&lt;/li&gt;&lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>4.启动 tomcat，接着可以使用 <a href="https://www.getpostman.com/" target="_blank" rel="noopener">postman</a> 等接口测试软件发送测试请求。</p><h3 id="4-2-日期格式转换"><a href="#4-2-日期格式转换" class="headerlink" title="4.2 日期格式转换"></a>4.2 日期格式转换</h3><p>Spring 支持使用以下三种方法来对参数中的日期格式进行转换：</p><p><strong>方法一</strong>：如上面的实例代码所示，在对应的 Controller 中初始化绑定：</p><pre><code>@InitBinderprotected void initBinder(WebDataBinder binder) {    binder.addCustomFormatter(new DateFormatter(&quot;yyyy-MM-dd HH:mm:ss&quot;));}</code></pre><p><strong>方法二</strong>：利用 @DateTimeFormat 注解，如果是用实体类去接收参数，则在对应的实体类的属性上用 @DateTimeFormat 和 @JsonFormat 进行声明：</p><pre><code>public String param(@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;) Date birthday)</code></pre><p><strong>方法三</strong>：使用全局的日期格式绑定，新建自定义日期格式转化类，之后在 <code>springApplication.xml</code> 中进行注册，采用这种方式会对全局范围内的日期格式转换生效：</p><pre><code>public class CustomDateConverter implements Converter&lt;String, Date&gt; {    public Date convert(String s) {        try {            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);            return simpleDateFormat.parse(s);        } catch (Exception e) {            e.printStackTrace();        }        return null;    }}</code></pre><p>在 <code>springApplication.xml</code> 中进行注册：</p><pre><code>&lt;!-- 全局日期格式转换  --&gt;&lt;bean id=&quot;formattingConversionService&quot; class=&quot;org.springframework.format.support.FormattingConversionServiceFactoryBean&quot;&gt;    &lt;property name=&quot;converters&quot;&gt;        &lt;list&gt;            &lt;bean class=&quot;top.zhoulis.convert.CustomDateConverter&quot;/&gt;        &lt;/list&gt;    &lt;/property&gt;&lt;/bean&gt;</code></pre><h2 id="五、数据校验"><a href="#五、数据校验" class="headerlink" title="五、数据校验"></a>五、数据校验</h2><p>1.Spring 支持 JSR303 标准的校验，需要引入相关的依赖：</p><pre><code>&lt;!-- 数据校验依赖包 --&gt;&lt;dependency&gt;    &lt;groupId&gt;org.hibernate.validator&lt;/groupId&gt;    &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;    &lt;version&gt;6.0.13.Final&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;javax.validation&lt;/groupId&gt;    &lt;artifactId&gt;validation-api&lt;/artifactId&gt;    &lt;version&gt;2.0.1.Final&lt;/version&gt;&lt;/dependency&gt;</code></pre><p>2.新建测试类 ParamValidController.java，在需要校验的参数前加上 @Validated 注解，表明该参数需要被校验。同时在方法声明中加上 bindingResult 参数，可以从这个参数中获取最终校验的结果：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ParamValidController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"validate"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">valid</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Validated</span> Programmer programmer<span class="token punctuation">,</span>BindingResult bindingResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>ObjectError<span class="token operator">></span> allErrors <span class="token operator">=</span> bindingResult<span class="token punctuation">.</span><span class="token function">getAllErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>ObjectError error <span class="token operator">:</span> allErrors<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span><span class="token function">getDefaultMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>3.在 Programmer.java 的对应属性上加上注解约束，用于声明每个参数的校验规则：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Programmer</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@NotNull</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Min</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>message <span class="token operator">=</span> <span class="token string">"年龄不能为负数！"</span> <span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Min</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>message <span class="token operator">=</span> <span class="token string">"薪酬不能为负数！"</span> <span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">float</span> salary<span class="token punctuation">;</span>    <span class="token keyword">private</span> String birthday<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>其他支持的注解可以到 javax.validation.constraints 包下进行查看。</p><h2 id="六、文件上传与下载"><a href="#六、文件上传与下载" class="headerlink" title="六、文件上传与下载"></a>六、文件上传与下载</h2><h3 id="6-1-文件上传"><a href="#6-1-文件上传" class="headerlink" title="6.1 文件上传"></a>6.1 文件上传</h3><p>1.在 <code>springApplication.xml</code> 中进行配置，开启文件上传：</p><pre><code>&lt;!--配置文件上传--&gt;&lt;bean id=&quot;multipartResolver&quot; class=&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;&gt;    &lt;!--文件最大限制--&gt;    &lt;property name=&quot;maxUploadSize&quot; value=&quot;102400000&quot;/&gt;    &lt;!--单个文件最大限制--&gt;    &lt;property name=&quot;maxUploadSizePerFile&quot; value=&quot;10240000&quot;/&gt;    &lt;property name=&quot;defaultEncoding&quot; value=&quot;utf-8&quot;/&gt;&lt;/bean&gt;</code></pre><p>2.新建上传测试类：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">filePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"file"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/***     * 单文件上传     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"upFile"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">upFile</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">,</span> HttpSession session<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//保存在项目根目录下 image 文件夹下，如果文件夹不存在则创建</span>        FileUtil<span class="token punctuation">.</span><span class="token function">saveFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> session<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/image"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// success.jsp 就是一个简单的成功页面</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/***     * 多文件上传 多个文件用同一个名字     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"upFiles"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">upFiles</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"file"</span><span class="token punctuation">)</span> MultipartFile<span class="token punctuation">[</span><span class="token punctuation">]</span> files<span class="token punctuation">,</span> HttpSession session<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>MultipartFile file <span class="token operator">:</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>            FileUtil<span class="token punctuation">.</span><span class="token function">saveFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> session<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"images"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/***     * 多文件上传方式 2 分别为不同文件指定不同名字     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"upFiles2"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">upFile</span><span class="token punctuation">(</span>String extendParam<span class="token punctuation">,</span>                         <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"file1"</span><span class="token punctuation">)</span> MultipartFile file1<span class="token punctuation">,</span>                         <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"file2"</span><span class="token punctuation">)</span> MultipartFile file2<span class="token punctuation">,</span> HttpSession session<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String realPath <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"images2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        FileUtil<span class="token punctuation">.</span><span class="token function">saveFile</span><span class="token punctuation">(</span>file1<span class="token punctuation">,</span> realPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        FileUtil<span class="token punctuation">.</span><span class="token function">saveFile</span><span class="token punctuation">(</span>file2<span class="token punctuation">,</span> realPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"extendParam:"</span> <span class="token operator">+</span> extendParam<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>3.其中工具类 FileUtil.java 的代码实现如下：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileUtil</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">saveFile</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">,</span> String path<span class="token punctuation">)</span> <span class="token punctuation">{</span>        InputStream inputStream <span class="token operator">=</span> null<span class="token punctuation">;</span>        FileOutputStream outputStream <span class="token operator">=</span> null<span class="token punctuation">;</span>        String fullPath <span class="token operator">=</span> path <span class="token operator">+</span> File<span class="token punctuation">.</span>separator <span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            File saveDir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>saveDir<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                saveDir<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            outputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fullPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            inputStream <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> read<span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>read <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> read<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>inputStream <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>outputStream <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> fullPath<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>4.新建用于上传的 jsp 页面，上传文件时表单必须声明 <code>enctype=&quot;multipart/form-data&quot;</code> ：</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">%</span>@ page contentType<span class="token operator">=</span><span class="token string">"text/html;charset=UTF-8"</span> language<span class="token operator">=</span><span class="token string">"java"</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>文件上传<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"${pageContext.request.contextPath}/css/file.css"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"${pageContext.request.contextPath }/upFile"</span> method<span class="token operator">=</span><span class="token string">"post"</span> enctype<span class="token operator">=</span><span class="token string">"multipart/form-data"</span><span class="token operator">></span>        请选择上传文件：<span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"file"</span> type<span class="token operator">=</span><span class="token string">"file"</span><span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"点击上传文件"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"${pageContext.request.contextPath }/upFiles"</span> method<span class="token operator">=</span><span class="token string">"post"</span> enctype<span class="token operator">=</span><span class="token string">"multipart/form-data"</span><span class="token operator">></span>        请选择上传文件 <span class="token punctuation">(</span>多选<span class="token punctuation">)</span>：<span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"file"</span> type<span class="token operator">=</span><span class="token string">"file"</span> multiple<span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"点击上传文件"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"${pageContext.request.contextPath }/upFiles2"</span> method<span class="token operator">=</span><span class="token string">"post"</span> enctype<span class="token operator">=</span><span class="token string">"multipart/form-data"</span><span class="token operator">></span>        请选择上传文件 <span class="token number">1</span>：<span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"file1"</span> type<span class="token operator">=</span><span class="token string">"file"</span><span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span>        请选择上传文件 <span class="token number">2</span>：<span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"file2"</span> type<span class="token operator">=</span><span class="token string">"file"</span><span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span>        文件内容额外备注<span class="token operator">:</span> <span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"extendParam"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"点击上传文件"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><h3 id="6-2-文件下载"><a href="#6-2-文件下载" class="headerlink" title="6.2 文件下载"></a>6.2 文件下载</h3><p>1.在 fileController.java 中增加下载方法：</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/*** * 上传用于下载的文件 */</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"upFileForDownload"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">upFileForDownload</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">,</span> HttpSession session<span class="token punctuation">,</span> Model model<span class="token punctuation">)</span> <span class="token keyword">throws</span> UnsupportedEncodingException <span class="token punctuation">{</span>    String path <span class="token operator">=</span> FileUtil<span class="token punctuation">.</span><span class="token function">saveFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> session<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/image"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"filePath"</span><span class="token punctuation">,</span> URLEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"fileName"</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"fileDownload"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*** * 下载文件 */</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"download"</span><span class="token punctuation">)</span><span class="token keyword">public</span> ResponseEntity<span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token function">downloadFile</span><span class="token punctuation">(</span>String filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>    HttpHeaders headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 解决文件名中文乱码</span>    String fileName<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"iso-8859-1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span>MediaType<span class="token punctuation">.</span>APPLICATION_OCTET_STREAM<span class="token punctuation">)</span><span class="token punctuation">;</span>    headers<span class="token punctuation">.</span><span class="token function">setContentDispositionFormData</span><span class="token punctuation">(</span><span class="token string">"attachment"</span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span>FileUtils<span class="token punctuation">.</span><span class="token function">readFileToByteArray</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">,</span>                                      headers<span class="token punctuation">,</span> HttpStatus<span class="token punctuation">.</span>CREATED<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>2.其中 fileDownload.jsp 的内容如下：</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">%</span>@ page contentType<span class="token operator">=</span><span class="token string">"text/html;charset=UTF-8"</span> language<span class="token operator">=</span><span class="token string">"java"</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>文件下载<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"${pageContext.request.contextPath}/download?filePath=${filePath}"</span><span class="token operator">></span>$<span class="token punctuation">{</span>fileName<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><p>增加file.jsp的内容</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"${pageContext.request.contextPath}/upFileForDownload"</span> method<span class="token operator">=</span><span class="token string">"post"</span> enctype<span class="token operator">=</span><span class="token string">"multipart/form-data"</span><span class="token operator">></span>    请选择上传文件<span class="token operator">:</span><span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"file"</span> type<span class="token operator">=</span><span class="token string">"file"</span><span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"点击上传文件"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Spring-MVC-基础（基于-XML-配置）&quot;&gt;&lt;a href=&quot;#Spring-MVC-基础（基于-XML-配置）&quot; class=&quot;headerlink&quot; title=&quot;Spring MVC 基础（基于 XML 配置）&quot;&gt;&lt;/a&gt;Spring MVC 基础（
      
    
    </summary>
    
      <category term="SpringMVC" scheme="http://www.zhoulis.top/categories/SpringMVC/"/>
    
    
      <category term="java" scheme="http://www.zhoulis.top/tags/java/"/>
    
      <category term="SpringMVC" scheme="http://www.zhoulis.top/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>ssm小项目：人事管理系统(三)</title>
    <link href="http://www.zhoulis.top/hrm3"/>
    <id>http://www.zhoulis.top/hrm3</id>
    <published>2019-08-29T04:25:00.000Z</published>
    <updated>2019-09-22T03:11:43.697Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实现Web层"><a href="#实现Web层" class="headerlink" title="实现Web层"></a>实现Web层</h1><blockquote><p>当控制器接受发到用户请求后，控制器并不会处理用户请求，只是对用户的请求参数进行解析处理，然后调用业务逻辑方法来处理用户请求； 当请求被处理完成后，控制器负责将处理结果通过JSP页面呈现给用户</p></blockquote><p>web.xml</p><pre class=" language-XML"><code class="language-XML"><?xml version="1.0" encoding="UTF-8"?><web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"         xmlns="http://xmlns.jcp.org/xml/ns/javaee"         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">  <listener>    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  </listener>  <context-param>    <param-name>contextConfigLocation</param-name>    <param-value>classpath:applicationContext*.xml</param-value>  </context-param>  <servlet>    <servlet-name>springmvc</servlet-name>    <servlet-class>      org.springframework.web.servlet.DispatcherServlet    </servlet-class>    <init-param>      <param-name>contextConfigLocation</param-name>      <param-value>classpath:springmvc-config.xml</param-value>    </init-param>    <load-on-startup>1</load-on-startup>  </servlet>  <servlet-mapping>    <servlet-name>springmvc</servlet-name>    <url-pattern>/</url-pattern>  </servlet-mapping>  <filter>    <filter-name>characterEncodingFilter</filter-name>    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>    <init-param>      <param-name>encoding</param-name>      <param-value>UTF-8</param-value>    </init-param>  </filter>  <filter-mapping>    <filter-name>characterEncodingFilter</filter-name>    <url-pattern>/*</url-pattern>  </filter-mapping>  <jsp-config>    <jsp-property-group>      <url-pattern>*.jsp</url-pattern>      <el-ignored>false</el-ignored>      <scripting-invalid>true</scripting-invalid>      <include-prelude>/WEB-INF/jsp/taglib.jsp</include-prelude>    </jsp-property-group>  </jsp-config><!--  <error-page>--><!--    <error-code>404</error-code>--><!--    <location>/404.html</location>--><!--  </error-page>--><!--  <welcome-file-list>--><!--    <welcome-file>index.jsp</welcome-file>--><!--  </welcome-file-list>--></web-app></code></pre><p>对于使用Spring mvc的应用而言，控制器实际上由两个部分组成：系统的核心控制器DispatcherServlet和业务控制器Controller。</p><p>springmvc-config.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/mvc<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>p</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/p<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>        http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://www.springframework.org/schema/mvc        http://www.springframework.org/schema/mvc/spring-mvc.xsd        http://www.springframework.org/schema/context        http://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top.zhoulis.www.controller<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>default-servlet-handler</span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--    &lt;mvc:interceptors>--></span><span class="token comment" spellcheck="true">&lt;!--        &lt;mvc:interceptor>--></span><span class="token comment" spellcheck="true">&lt;!--            &lt;mvc:mapping path="/*"/>--></span><span class="token comment" spellcheck="true">&lt;!--            &lt;bean class="top.zhoulis.www.interceptor.AuthorizedInterceptor"/>--></span><span class="token comment" spellcheck="true">&lt;!--        &lt;/mvc:interceptor>--></span><span class="token comment" spellcheck="true">&lt;!--    &lt;/mvc:interceptors>--></span>    <span class="token comment" spellcheck="true">&lt;!-- 视图解析器   --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewResolver<span class="token punctuation">"</span></span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>prefix</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/WEB-INF/jsp/<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>suffix</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.jsp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--    &lt;bean id="multipartResolver"--></span><span class="token comment" spellcheck="true">&lt;!--          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">--></span><span class="token comment" spellcheck="true">&lt;!--        &lt;property name="maxUploadSize">--></span><span class="token comment" spellcheck="true">&lt;!--            &lt;value>10485760&lt;/value>--></span><span class="token comment" spellcheck="true">&lt;!--        &lt;/property>--></span><span class="token comment" spellcheck="true">&lt;!--        &lt;property name="defaultEncoding">--></span><span class="token comment" spellcheck="true">&lt;!--            &lt;value>UTF-8&lt;/value>--></span><span class="token comment" spellcheck="true">&lt;!--        &lt;/property>--></span><span class="token comment" spellcheck="true">&lt;!--    &lt;/bean>--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><p>处理用户的UserController</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Qualifier<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>Model<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ModelAttribute<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestParam<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ModelAndView<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>service<span class="token punctuation">.</span>HrmService<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>tag<span class="token punctuation">.</span>PageModel<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpSession<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 处理用户请求控制器 */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 自动注入UserService     * */</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"hrmService"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> HrmService hrmService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 处理登录请求     * @param  loginname  登录名     * @param  password 密码     * @return 跳转的视图     * */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/login"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"loginname"</span><span class="token punctuation">)</span> String loginname<span class="token punctuation">,</span>                              <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span> String password<span class="token punctuation">,</span>                              HttpSession session<span class="token punctuation">,</span>                              ModelAndView mv<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"zzzzzzzzzzzzzzzzzzzzzzzzzz"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 调用业务逻辑组件判断用户是否可以登录</span>        User user <span class="token operator">=</span> hrmService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>loginname<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行了login"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 将用户保存到HttpSession当中</span>            session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>HrmConstants<span class="token punctuation">.</span>USER_SESSION<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 客户端跳转到main页面</span>            mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"redirect:/main"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 设置登录失败提示信息</span>            mv<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token string">"登录名或密码错误!请重新输入"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 服务器内部跳转到登录页面</span>            mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"forward:/loginForm"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理查询请求     * */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/user/selectUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">selectUser</span><span class="token punctuation">(</span>Integer pageIndex<span class="token punctuation">,</span>                             <span class="token annotation punctuation">@ModelAttribute</span> User user<span class="token punctuation">,</span>                             Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"user = "</span> <span class="token operator">+</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>        PageModel pageModel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>pageIndex <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            pageModel<span class="token punctuation">.</span><span class="token function">setPageIndex</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/** 查询用户信息     */</span>        List<span class="token operator">&lt;</span>User<span class="token operator">></span> users <span class="token operator">=</span> hrmService<span class="token punctuation">.</span><span class="token function">findUser</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">,</span> pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"user/user"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理删除用户请求     * */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/user/removeUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">removeUser</span><span class="token punctuation">(</span>String ids<span class="token punctuation">,</span>ModelAndView mv<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 分解id字符串</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> idArray <span class="token operator">=</span> ids<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>String id <span class="token operator">:</span> idArray<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 根据id删除员工</span>            hrmService<span class="token punctuation">.</span><span class="token function">removeUserById</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 设置客户端跳转到查询请求</span>        mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"redirect:/user/selectUser"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 返回ModelAndView</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理修改用户请求     * */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/user/updateUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">updateUser</span><span class="token punctuation">(</span>            String flag<span class="token punctuation">,</span>            <span class="token annotation punctuation">@ModelAttribute</span> User user<span class="token punctuation">,</span>            ModelAndView mv<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 根据id查询用户</span>            User target <span class="token operator">=</span> hrmService<span class="token punctuation">.</span><span class="token function">findUserById</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置Model数据</span>            mv<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 返回修改员工页面</span>            mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"user/showUpdateUser"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 执行修改操作</span>            hrmService<span class="token punctuation">.</span><span class="token function">modifyUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置客户端跳转到查询请求</span>            mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"redirect:/user/selectUser"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 返回</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理添加请求     * */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/user/addUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">addUser</span><span class="token punctuation">(</span>            String flag<span class="token punctuation">,</span>            <span class="token annotation punctuation">@ModelAttribute</span> User user<span class="token punctuation">,</span>            ModelAndView mv<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 设置跳转到添加页面</span>            mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"user/showAddUser"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 执行添加操作</span>            hrmService<span class="token punctuation">.</span><span class="token function">addUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置客户端跳转到查询请求</span>            mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"redirect:/user/selectUser"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 返回</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理注销退出请求     * */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/logout"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">logout</span><span class="token punctuation">(</span>            ModelAndView mv<span class="token punctuation">,</span>            HttpSession session<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 注销session</span>        session<span class="token punctuation">.</span><span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 跳转到登录页面</span>        mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"redirect:/loginForm"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>部署这个Web应用，在浏览器中输入如下URL来测试应用：</p><p><a href="http://localhost:8080/hrmanage" target="_blank" rel="noopener">http://localhost:8080/hrmanage</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;实现Web层&quot;&gt;&lt;a href=&quot;#实现Web层&quot; class=&quot;headerlink&quot; title=&quot;实现Web层&quot;&gt;&lt;/a&gt;实现Web层&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;当控制器接受发到用户请求后，控制器并不会处理用户请求，只是对用户的请求参数进行解析
      
    
    </summary>
    
      <category term="ssm" scheme="http://www.zhoulis.top/categories/ssm/"/>
    
    
      <category term="java" scheme="http://www.zhoulis.top/tags/java/"/>
    
      <category term="ssm" scheme="http://www.zhoulis.top/tags/ssm/"/>
    
  </entry>
  
  <entry>
    <title>ssm小项目：人事管理系统(二)</title>
    <link href="http://www.zhoulis.top/hrm2"/>
    <id>http://www.zhoulis.top/hrm2</id>
    <published>2019-08-22T04:25:00.000Z</published>
    <updated>2019-09-22T03:11:20.629Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ssm小项目：人事管理系统-二"><a href="#ssm小项目：人事管理系统-二" class="headerlink" title="ssm小项目：人事管理系统(二)"></a>ssm小项目：人事管理系统(二)</h2><h3 id="部署DAO层"><a href="#部署DAO层" class="headerlink" title="部署DAO层"></a>部署DAO层</h3><p>先为其提供对应的数据源 db.properties</p><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">dataSource.driverClass</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.cj.jdbc.Driver</span><span class="token attr-name">dataSource.jdbcUrl</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/hrm_db?serverTimezone=GMT</span><span class="token attr-name">dataSource.user</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">dataSource.password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span class="token attr-name">dataSource.maxPoolSize</span><span class="token punctuation">=</span><span class="token attr-value">20</span><span class="token attr-name">dataSource.maxIdleTime</span> <span class="token punctuation">=</span> <span class="token attr-value">1000</span><span class="token attr-name">dataSource.minPoolSize</span><span class="token punctuation">=</span><span class="token attr-value">6</span><span class="token attr-name">dataSource.initialPoolSize</span><span class="token punctuation">=</span><span class="token attr-value">5</span></code></pre><p>配置完数据源后就可以在此基础上配置SqlSessionFactory对象：</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>mybatis</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://mybatis.org/schema/mybatis-spring<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>p</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/p<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>tx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/tx<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd       http://mybatis.org/schema/mybatis-spring       http://mybatis.org/schema/mybatis-spring.xsd       http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mybatis:</span>scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top.zhoulis.www.dao<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top.zhoulis.www<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-override</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:db.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--配置c3p0数据源添加依赖：   &lt;dependency>      &lt;groupId>c3p0&lt;/groupId>      &lt;artifactId>c3p0&lt;/artifactId>      &lt;version>0.9.1.2&lt;/version>    &lt;/dependency>--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sqlSessionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.spring.SqlSessionFactoryBean<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>dataSource-ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><p>简化分页功能，设计一个分页的JSP标签</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>tag<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PageModel</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*分页总数据条数*/</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> recordCount<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*当前页面*/</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> pageIndex<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*每页分多少数据*/</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> pageSize <span class="token operator">=</span> HrmConstants<span class="token punctuation">.</span>PAGE_DEFAULT_SIZE <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*总页数*/</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> totalSize<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getRecordCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>recordCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>recordCount <span class="token operator">&lt;=</span><span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>recordCount<span class="token punctuation">;</span>        <span class="token keyword">return</span> recordCount<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRecordCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> recordCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>recordCount <span class="token operator">=</span> recordCount<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getPageIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">&lt;=</span><span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//判断当前页面是否超过了总页数 ： 如果超过了默认将最后一页作为当前页</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex<span class="token operator">>=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTotalSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTotalSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex<span class="token punctuation">;</span>        <span class="token keyword">return</span> pageIndex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPageIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> pageIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">=</span> pageIndex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize <span class="token operator">&lt;=</span>HrmConstants<span class="token punctuation">.</span>PAGE_DEFAULT_SIZE <span class="token operator">?</span> HrmConstants<span class="token punctuation">.</span>PAGE_DEFAULT_SIZE<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>        <span class="token keyword">return</span> pageSize<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPageSize</span><span class="token punctuation">(</span><span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize <span class="token operator">=</span> pageSize<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getTotalSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRecordCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            totalSize <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            totalSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRecordCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> totalSize<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getFirstLimitParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>tag<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>jsp<span class="token punctuation">.</span>JspException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>jsp<span class="token punctuation">.</span>tagext<span class="token punctuation">.</span>SimpleTagSupport<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*** * 分页标签 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PagerTag</span> <span class="token keyword">extends</span> <span class="token class-name">SimpleTagSupport</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/** 定义请求URL中的占位符常量 */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> <span class="token string">"{0}"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/** 当前页码 */</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> pageIndex<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/** 每页显示的数量 */</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/** 总记录条数 */</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> recordCount<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/** 请求URL page.action?pageIndex={0}*/</span>    <span class="token keyword">private</span> String submitUrl<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/** 样式 */</span>    <span class="token keyword">private</span> String style <span class="token operator">=</span> <span class="token string">"sabrosus"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/** 定义总页数 */</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> totalPage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**  在页面上引用自定义标签就会触发一个标签处理类   */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> JspException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/** 定义它拼接是终的结果 */</span>        StringBuilder res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/** 定义它拼接中间的页码 */</span>        StringBuilder str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/** 判断总记录条数 */</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>recordCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">//1499 / 15  = 100</span>            <span class="token comment" spellcheck="true">/** 需要显示分页标签，计算出总页数 需要分多少页 */</span>            totalPage <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>recordCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/** 判断上一页或下一页需不需要加a标签 */</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 首页</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;span class='disabled'>上一页&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/** 计算中间的页码 */</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calcPage</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/** 下一页需不需要a标签 */</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">==</span> totalPage<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">/** 只有一页 */</span>                    str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;span class='disabled'>下一页&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    String tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>pageIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>下一页&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">==</span> totalPage<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 尾页</span>                String tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>pageIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>上一页&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/** 计算中间的页码 */</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calcPage</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;span class='disabled'>下一页&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 中间</span>                String tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>pageIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>上一页&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/** 计算中间的页码 */</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calcPage</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>pageIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>下一页&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">/** 拼接其它的信息 */</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;table width='100%' align='center' style='font-size:13px;' class='"</span><span class="token operator">+</span> style <span class="token operator">+</span><span class="token string">"'>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;tr>&lt;td style='COLOR: #0061de; MARGIN-RIGHT: 3px; PADDING-TOP: 2px; TEXT-DECORATION: none'>"</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&amp;nbsp;跳转到&amp;nbsp;&amp;nbsp;&lt;input style='text-align: center;BORDER-RIGHT: #aaaadd 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #aaaadd 1px solid; PADDING-LEFT: 5px; PADDING-BOTTOM: 2px; MARGIN: 2px; BORDER-LEFT: #aaaadd 1px solid; COLOR: #000099; PADDING-TOP: 2px; BORDER-BOTTOM: #aaaadd 1px solid; TEXT-DECORATION: none' type='text' size='2' id='pager_jump_page_size'/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&amp;nbsp;&lt;input type='button' style='text-align: center;BORDER-RIGHT: #dedfde 1px solid; PADDING-RIGHT: 6px; BACKGROUND-POSITION: 50% bottom; BORDER-TOP: #dedfde 1px solid; PADDING-LEFT: 6px; PADDING-BOTTOM: 2px; BORDER-LEFT: #dedfde 1px solid; COLOR: #0061de; MARGIN-RIGHT: 3px; PADDING-TOP: 2px; BORDER-BOTTOM: #dedfde 1px solid; TEXT-DECORATION: none' value='确定' id='pager_jump_btn'/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;/td>&lt;/tr>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;tr align='center'>&lt;td style='font-size:13px;'>&lt;tr>&lt;td style='COLOR: #0061de; MARGIN-RIGHT: 3px; PADDING-TOP: 2px; TEXT-DECORATION: none'>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/** 开始条数 */</span>            <span class="token keyword">int</span> startNum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/** 结束条数 */</span>            <span class="token keyword">int</span> endNum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPage<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>recordCount <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"总共&lt;font color='red'>"</span><span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>recordCount <span class="token operator">+</span><span class="token string">"&lt;/font>条记录，当前显示"</span><span class="token operator">+</span> startNum <span class="token operator">+</span><span class="token string">"-"</span><span class="token operator">+</span> endNum <span class="token operator">+</span><span class="token string">"条记录。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;/td>&lt;/tr>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;/table>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;script type='text/javascript'>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"   document.getElementById('pager_jump_btn').onclick = function(){"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"      var page_size = document.getElementById('pager_jump_page_size').value;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"      if (!/^[1-9]\\d*$/.test(page_size) || page_size &lt; 1 || page_size > "</span><span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPage <span class="token operator">+</span><span class="token string">"){"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"          alert('请输入[1-"</span><span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPage <span class="token operator">+</span><span class="token string">"]之间的页码！');"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"      }else{"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"         var submit_url = '"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl <span class="token operator">+</span> <span class="token string">"';"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"         window.location = submit_url.replace('"</span><span class="token operator">+</span> TAG <span class="token operator">+</span><span class="token string">"', page_size);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"      }"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;table align='center' style='font-size:13px;'>&lt;tr>&lt;td style='COLOR: #0061de; MARGIN-RIGHT: 3px; PADDING-TOP: 2px; TEXT-DECORATION: none'>总共&lt;font color='red'>0&lt;/font>条记录，当前显示0-0条记录。&lt;/td>&lt;/tr>&lt;/table>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getJspContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/** 计算中间页码的方法 */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">calcPage</span><span class="token punctuation">(</span>StringBuilder str<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/** 判断总页数 */</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>totalPage <span class="token operator">&lt;=</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/** 一次性显示全部的页码 */</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPage<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">==</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">/** 当前页码 */</span>                    str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;span class='current'>"</span><span class="token operator">+</span> i <span class="token operator">+</span><span class="token string">"&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    String tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>"</span><span class="token operator">+</span> i <span class="token operator">+</span><span class="token string">"&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/** 靠近首页 */</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">&lt;=</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">==</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">/** 当前页码 */</span>                        str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;span class='current'>"</span><span class="token operator">+</span> i <span class="token operator">+</span><span class="token string">"&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                        String tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>"</span><span class="token operator">+</span> i <span class="token operator">+</span><span class="token string">"&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>totalPage<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>"</span><span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPage <span class="token operator">+</span><span class="token string">"&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">/** 靠近尾页 */</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">+</span> <span class="token number">8</span> <span class="token operator">>=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPage<span class="token punctuation">)</span><span class="token punctuation">{</span>                String tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>1&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPage <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPage<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">==</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">/** 当前页码 */</span>                        str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;span class='current'>"</span><span class="token operator">+</span> i <span class="token operator">+</span><span class="token string">"&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                        tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>"</span><span class="token operator">+</span> i <span class="token operator">+</span><span class="token string">"&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">/** 在中间 */</span>            <span class="token keyword">else</span><span class="token punctuation">{</span>                String tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>1&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">==</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">/** 当前页码 */</span>                        str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;span class='current'>"</span><span class="token operator">+</span> i <span class="token operator">+</span><span class="token string">"&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                        tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>"</span><span class="token operator">+</span> i <span class="token operator">+</span><span class="token string">"&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                tempUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>totalPage<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a href='"</span><span class="token operator">+</span> tempUrl <span class="token operator">+</span><span class="token string">"'>"</span><span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPage <span class="token operator">+</span><span class="token string">"&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/** setter 方法 */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPageIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> pageIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pageIndex <span class="token operator">=</span> pageIndex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPageSize</span><span class="token punctuation">(</span><span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize <span class="token operator">=</span> pageSize<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRecordCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> recordCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>recordCount <span class="token operator">=</span> recordCount<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSubmitUrl</span><span class="token punctuation">(</span>String submitUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>submitUrl <span class="token operator">=</span> submitUrl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStyle</span><span class="token punctuation">(</span>String style<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>style <span class="token operator">=</span> style<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>要使用jsp标签库还需要增加一个tld标签文件</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>taglib</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee                    http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd<span class="token punctuation">"</span></span>                      <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 描述 自定义标签版本的一种描述 --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Pager 1.0 core library<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 显示的名称 导包进行的一个展示 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>display-name</span><span class="token punctuation">></span></span>Pager core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>display-name</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 版本号 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tlib-version</span><span class="token punctuation">></span></span>1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tlib-version</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 短名 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>short-name</span><span class="token punctuation">></span></span>fkjava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>short-name</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- uri ：导包 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uri</span><span class="token punctuation">></span></span>/pager-tags<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>uri</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 定义一个标签 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tag</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 标签名 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>pager<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 标签处理类 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tag-class</span><span class="token punctuation">></span></span>top.zhoulis.www.util.tag.PagerTag<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tag-class</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 设置标签为空 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body-content</span><span class="token punctuation">></span></span>empty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body-content</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 定义标签的属性 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 属性名 表示分页的第几页 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>pageIndex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 必须的 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>required</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>required</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- run time expression value 为true支持EL表达式 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rtexprvalue</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rtexprvalue</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 定义标签的属性 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 属性名 表示分页标签 ，每页显示多少条数据 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>pageSize<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 必须的 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>required</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>required</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- run time expression value 为true支持EL表达式 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rtexprvalue</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rtexprvalue</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 定义标签的属性 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 属性名  记录分页的总数 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>recordCount<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 必须的 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>required</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>required</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- run time expression value 为true支持EL表达式 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rtexprvalue</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rtexprvalue</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 定义标签的属性 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 属性名 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>submitUrl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 必须的 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>required</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>required</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- run time expression value 为true支持EL表达式 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rtexprvalue</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rtexprvalue</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 定义标签的属性 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 属性名 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>style<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 必须的 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>required</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>required</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- run time expression value 为true支持EL表达式 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rtexprvalue</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rtexprvalue</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tag</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>taglib</span><span class="token punctuation">></span></span></code></pre><h3 id="实现Service持久层"><a href="#实现Service持久层" class="headerlink" title="实现Service持久层"></a>实现Service持久层</h3><p>封装了6个DAO组件 采用了门面设计模式 使用业务逻辑组件将DAO对象封装在一起</p><p>业务逻辑组件面向DAO接口编程，可以让业务从DAO组件实现中分离。</p><p>下面是HRmService接口的源代码。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>tag<span class="token punctuation">.</span>PageModel<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">HrmService</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/**    * 用户登录    * @param  loginname    * @param  password    * @return User对象    * */</span>   User <span class="token function">login</span><span class="token punctuation">(</span>String loginname<span class="token punctuation">,</span> String password<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id查询用户    * @param id    * @return 用户对象    * */</span>   User <span class="token function">findUserById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 获得所有用户    * @return User对象的List集合    * */</span>   List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">findUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">,</span> PageModel pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id删除用户    * @param id    * */</span>   <span class="token keyword">void</span> <span class="token function">removeUserById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 修改用户    * @param user 用户对象    * */</span>   <span class="token keyword">void</span> <span class="token function">modifyUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 添加用户    * @param user 用户对象    * */</span>   <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 获得所有员工    * @param employee 查询条件    * @param pageModel 分页对象    * @return Dept对象的List集合    * */</span>   List<span class="token operator">&lt;</span>Employee<span class="token operator">></span> <span class="token function">findEmployee</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">,</span> PageModel pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id删除员工    * @param id    * */</span>   <span class="token keyword">void</span> <span class="token function">removeEmployeeById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id查询员工    * @param id    * @return 员工对象    * */</span>   Employee <span class="token function">findEmployeeById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 添加员工    * @param employee 员工对象    * */</span>   <span class="token keyword">void</span> <span class="token function">addEmployee</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 修改员工    * @param employee 员工对象    * */</span>   <span class="token keyword">void</span> <span class="token function">modifyEmployee</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 获得所有部门，分页查询    * @return Dept对象的List集合    * */</span>   List<span class="token operator">&lt;</span>Dept<span class="token operator">></span> <span class="token function">findDept</span><span class="token punctuation">(</span>Dept dept<span class="token punctuation">,</span> PageModel pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 获得所有部门    * @return Dept对象的List集合    * */</span>   List<span class="token operator">&lt;</span>Dept<span class="token operator">></span> <span class="token function">findAllDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id删除部门    * @param id    * */</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeDeptById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 添加部门    * @param dept 部门对象    * */</span>   <span class="token keyword">void</span> <span class="token function">addDept</span><span class="token punctuation">(</span>Dept dept<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id查询部门    * @param id    * @return 部门对象    * */</span>   Dept <span class="token function">findDeptById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 修改部门    * @param dept 部门对象    * */</span>   <span class="token keyword">void</span> <span class="token function">modifyDept</span><span class="token punctuation">(</span>Dept dept<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 获得所有职位    * @return Job对象的List集合    * */</span>   List<span class="token operator">&lt;</span>Job<span class="token operator">></span> <span class="token function">findAllJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   List<span class="token operator">&lt;</span>Job<span class="token operator">></span> <span class="token function">findJob</span><span class="token punctuation">(</span>Job job<span class="token punctuation">,</span>PageModel pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id删除职位    * @param id    * */</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeJobById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 添加职位    * @param job    * */</span>   <span class="token keyword">void</span> <span class="token function">addJob</span><span class="token punctuation">(</span>Job job<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id查询职位    * @param id    * @return 职位对象    * */</span>   Job <span class="token function">findJobById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 修改职位    * @param job    * */</span>   <span class="token keyword">void</span> <span class="token function">modifyJob</span><span class="token punctuation">(</span>Job job<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 获得所有公告    * @return Notice对象的List集合    * */</span>   List<span class="token operator">&lt;</span>Notice<span class="token operator">></span> <span class="token function">findNotice</span><span class="token punctuation">(</span>Notice notice<span class="token punctuation">,</span> PageModel pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id查询公告    * @param id    * @return 公告对象    * */</span>   Notice <span class="token function">findNoticeById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id删除公告    * @param id    * */</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeNoticeById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 添加公告    * @param notice 公告对象    * */</span>   <span class="token keyword">void</span> <span class="token function">addNotice</span><span class="token punctuation">(</span>Notice notice<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 修改公告    * @param notice 公告对象    * */</span>   <span class="token keyword">void</span> <span class="token function">modifyNotice</span><span class="token punctuation">(</span>Notice notice<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 获得所有文档    * @return Document对象的List集合    * */</span>   List<span class="token operator">&lt;</span>Document<span class="token operator">></span> <span class="token function">findDocument</span><span class="token punctuation">(</span>Document document<span class="token punctuation">,</span>PageModel pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 添加文档    * @param document 文件对象    * */</span>   <span class="token keyword">void</span> <span class="token function">addDocument</span><span class="token punctuation">(</span>Document document<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id查询文档    * @param id    * @return 文档对象    * */</span>   Document <span class="token function">findDocumentById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 根据id删除文档    * @param id    * */</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeDocumentById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/**    * 修改文档    * @param document 公告对象    * */</span>   <span class="token keyword">void</span> <span class="token function">modifyDocument</span><span class="token punctuation">(</span>Document document<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>接下来是这些业务逻辑方法的实现：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Isolation<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Propagation<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>service<span class="token punctuation">.</span>HrmService<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>tag<span class="token punctuation">.</span>PageModel<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>propagation<span class="token operator">=</span> Propagation<span class="token punctuation">.</span>REQUIRED<span class="token punctuation">,</span>isolation<span class="token operator">=</span> Isolation<span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"hrmService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HrmServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">HrmService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 自动注入持久层Dao对象     * */</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserDao userDao<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> DeptDao deptDao<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> EmployeeDao employeeDao<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> JobDao jobDao<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> NoticeDao noticeDao<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> DocumentDao documentDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*****************用户服务接口实现*************************************/</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口login方法实现     *  @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> User <span class="token function">login</span><span class="token punctuation">(</span>String loginname<span class="token punctuation">,</span> String password<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//    System.out.println("HrmServiceImpl login -- >>");</span>        <span class="token keyword">return</span> userDao<span class="token punctuation">.</span><span class="token function">selectByLoginnameAndPassword</span><span class="token punctuation">(</span>loginname<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口findUser方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">findUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">,</span> PageModel pageModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/** 当前需要分页的总数据条数  */</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> recordCount <span class="token operator">=</span> userDao<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        pageModel<span class="token punctuation">.</span><span class="token function">setRecordCount</span><span class="token punctuation">(</span>recordCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>recordCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/** 开始分页查询数据：查询第几页的数据 */</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">,</span> pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        List<span class="token operator">&lt;</span>User<span class="token operator">></span> users <span class="token operator">=</span> userDao<span class="token punctuation">.</span><span class="token function">selectByPage</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> users<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口findUserById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> User <span class="token function">findUserById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userDao<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口removeUserById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeUserById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        userDao<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口addUser方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        userDao<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口modifyUser方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        userDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*****************部门服务接口实现*************************************/</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Dept<span class="token operator">></span> <span class="token function">findAllDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> deptDao<span class="token punctuation">.</span><span class="token function">selectAllDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口findDept方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Dept<span class="token operator">></span> <span class="token function">findDept</span><span class="token punctuation">(</span>Dept dept<span class="token punctuation">,</span>PageModel pageModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/** 当前需要分页的总数据条数  */</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"dept"</span><span class="token punctuation">,</span> dept<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> recordCount <span class="token operator">=</span> deptDao<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        pageModel<span class="token punctuation">.</span><span class="token function">setRecordCount</span><span class="token punctuation">(</span>recordCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>recordCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/** 开始分页查询数据：查询第几页的数据 */</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">,</span> pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        List<span class="token operator">&lt;</span>Dept<span class="token operator">></span> depts <span class="token operator">=</span> deptDao<span class="token punctuation">.</span><span class="token function">selectByPage</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> depts<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口removeUserById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeDeptById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        deptDao<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口addDept方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addDept</span><span class="token punctuation">(</span>Dept dept<span class="token punctuation">)</span> <span class="token punctuation">{</span>        deptDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口findDeptById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Dept <span class="token function">findDeptById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> deptDao<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmServiceImpl接口modifyDept方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyDept</span><span class="token punctuation">(</span>Dept dept<span class="token punctuation">)</span> <span class="token punctuation">{</span>        deptDao<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*****************员工服务接口实现*************************************/</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口findEmployee方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Employee<span class="token operator">></span> <span class="token function">findEmployee</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">,</span> PageModel pageModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/** 当前需要分页的总数据条数  */</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"employee"</span><span class="token punctuation">,</span> employee<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> recordCount <span class="token operator">=</span> employeeDao<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        pageModel<span class="token punctuation">.</span><span class="token function">setRecordCount</span><span class="token punctuation">(</span>recordCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>recordCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/** 开始分页查询数据：查询第几页的数据 */</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">,</span> pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        List<span class="token operator">&lt;</span>Employee<span class="token operator">></span> employees <span class="token operator">=</span> employeeDao<span class="token punctuation">.</span><span class="token function">selectByPage</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> employees<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口removeEmployeeById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeEmployeeById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        employeeDao<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口findEmployeeById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Employee <span class="token function">findEmployeeById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> employeeDao<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口addEmployee方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addEmployee</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span> <span class="token punctuation">{</span>        employeeDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口modifyEmployee方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyEmployee</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span> <span class="token punctuation">{</span>        employeeDao<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*****************职位接口实现*************************************/</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口findAllJob方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Job<span class="token operator">></span> <span class="token function">findAllJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> jobDao<span class="token punctuation">.</span><span class="token function">selectAllJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口findJob方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Job<span class="token operator">></span> <span class="token function">findJob</span><span class="token punctuation">(</span>Job job<span class="token punctuation">,</span> PageModel pageModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/** 当前需要分页的总数据条数  */</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"job"</span><span class="token punctuation">,</span> job<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> recordCount <span class="token operator">=</span> jobDao<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        pageModel<span class="token punctuation">.</span><span class="token function">setRecordCount</span><span class="token punctuation">(</span>recordCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>recordCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/** 开始分页查询数据：查询第几页的数据 */</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">,</span> pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        List<span class="token operator">&lt;</span>Job<span class="token operator">></span> jobs <span class="token operator">=</span> jobDao<span class="token punctuation">.</span><span class="token function">selectByPage</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> jobs<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口removeJobById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeJobById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        jobDao<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口addJob方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addJob</span><span class="token punctuation">(</span>Job job<span class="token punctuation">)</span> <span class="token punctuation">{</span>        jobDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口findJobById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Job <span class="token function">findJobById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> jobDao<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口modifyJob方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyJob</span><span class="token punctuation">(</span>Job job<span class="token punctuation">)</span> <span class="token punctuation">{</span>        jobDao<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*****************公告接口实现*************************************/</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Notice<span class="token operator">></span> <span class="token function">findNotice</span><span class="token punctuation">(</span>Notice notice<span class="token punctuation">,</span> PageModel pageModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/** 当前需要分页的总数据条数  */</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"notice"</span><span class="token punctuation">,</span> notice<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> recordCount <span class="token operator">=</span> noticeDao<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        pageModel<span class="token punctuation">.</span><span class="token function">setRecordCount</span><span class="token punctuation">(</span>recordCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>recordCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/** 开始分页查询数据：查询第几页的数据 */</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">,</span> pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        List<span class="token operator">&lt;</span>Notice<span class="token operator">></span> notices <span class="token operator">=</span> noticeDao<span class="token punctuation">.</span><span class="token function">selectByPage</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> notices<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口findNoticeById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Notice <span class="token function">findNoticeById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> noticeDao<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口removeNoticeById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeNoticeById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        noticeDao<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口addNotice方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addNotice</span><span class="token punctuation">(</span>Notice notice<span class="token punctuation">)</span> <span class="token punctuation">{</span>        noticeDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>notice<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口modifyNotice方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyNotice</span><span class="token punctuation">(</span>Notice notice<span class="token punctuation">)</span> <span class="token punctuation">{</span>        noticeDao<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>notice<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*****************文件接口实现*************************************/</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口findDocument方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Document<span class="token operator">></span> <span class="token function">findDocument</span><span class="token punctuation">(</span>Document document<span class="token punctuation">,</span> PageModel pageModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/** 当前需要分页的总数据条数  */</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"document"</span><span class="token punctuation">,</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> recordCount <span class="token operator">=</span> documentDao<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        pageModel<span class="token punctuation">.</span><span class="token function">setRecordCount</span><span class="token punctuation">(</span>recordCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>recordCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/** 开始分页查询数据：查询第几页的数据 */</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">,</span> pageModel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        List<span class="token operator">&lt;</span>Document<span class="token operator">></span> documents <span class="token operator">=</span> documentDao<span class="token punctuation">.</span><span class="token function">selectByPage</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> documents<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口addDocument方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addDocument</span><span class="token punctuation">(</span>Document document<span class="token punctuation">)</span> <span class="token punctuation">{</span>        documentDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口removeDocumentById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeDocumentById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        documentDao<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口modifyDocument方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyDocument</span><span class="token punctuation">(</span>Document document<span class="token punctuation">)</span> <span class="token punctuation">{</span>        documentDao<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * HrmService接口findDocumentById方法实现     * @see { HrmService }     * */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>readOnly<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Document <span class="token function">findDocumentById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> documentDao<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="事务管理"><a href="#事务管理" class="headerlink" title="事务管理"></a>事务管理</h3><p>事务管理配置在applicationContext.xml中：</p><pre><code>&lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;      p:dataSource-ref=&quot;dataSource&quot;/&gt;&lt;tx:annotation-driven transaction-manager=&quot;transactionManager&quot;/&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ssm小项目：人事管理系统-二&quot;&gt;&lt;a href=&quot;#ssm小项目：人事管理系统-二&quot; class=&quot;headerlink&quot; title=&quot;ssm小项目：人事管理系统(二)&quot;&gt;&lt;/a&gt;ssm小项目：人事管理系统(二)&lt;/h2&gt;&lt;h3 id=&quot;部署DAO层&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="ssm" scheme="http://www.zhoulis.top/categories/ssm/"/>
    
    
      <category term="java" scheme="http://www.zhoulis.top/tags/java/"/>
    
      <category term="ssm" scheme="http://www.zhoulis.top/tags/ssm/"/>
    
  </entry>
  
  <entry>
    <title>ssm小项目：人事管理系统(一)</title>
    <link href="http://www.zhoulis.top/hrm1"/>
    <id>http://www.zhoulis.top/hrm1</id>
    <published>2019-08-21T07:25:00.000Z</published>
    <updated>2019-08-22T07:41:19.497Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ssm小项目：人事管理系统-一"><a href="#ssm小项目：人事管理系统-一" class="headerlink" title="ssm小项目：人事管理系统(一)"></a>ssm小项目：人事管理系统(一)</h2><p>该项目包括用户管理、部门管理、职位管理、员工管理、、公告管理下载中心等系统功能。<br>    采用Spring+SpringMVC+MyBatis架构，Spring的IOC容器负责管理业务逻辑组件、持久层组件及控制层组件。</p><ul><li><p>用户管理的功能包括:添加用户，用户可以为管理员或者普通用户;查询用户，可以查询<br>所有用户或根据用户名和用户状态进行模糊查询;删除用户;修改用户。</p></li><li><p>部门管理的功能包括:添加部门;查询部门，可以查询所有部门或根据部门名称进行模糊<br>查询;删除部门;修改部门。</p></li><li><p>职位管理的功能包括:添加职位;查询职位，可以查询所有职位或根据职位名称进行模糊<br>查询;删除职位;修改职位。</p></li><li><p>员工管理的功能包括:添加员工;查询员工，可以查询所有员工或根据员工姓名、身份证<br>号、手机号、性别、职位、部门进行模糊查询;删除员工;修改员工。</p></li><li><p>公告管理的功能包括:添加公告;查询公告，可以查询所有公告或根据公告名称、公告内<br>容进行模糊查询;删除公告;修改公告。</p></li><li><p>下载中心的功能包括:上传文件;查询文件，可以查询所有文件或根据文件标题进行模糊查询;<br>预览文件内容;删除文件;下载文件。所有查询页面统–使用分页处理。</p></li></ul><h3 id="设计数据库表"><a href="#设计数据库表" class="headerlink" title="设计数据库表"></a>设计数据库表</h3><p>首先，根据模块功能设计数据库表，具体sql语句如下：</p><pre class=" language-mysql"><code class="language-mysql">#创建数据库hrm_dbCREATE DATABASE hrm_db;#使用数据库hrm_dbUSE hrm_db;#创建表dept_infCREATE TABLE dept_inf (  ID INT(11) NOT NULL AUTO_INCREMENT,  NAME VARCHAR(50) NOT NULL,  REMARK VARCHAR(300) DEFAULT NULL,  PRIMARY KEY (ID)) ENGINE=INNODB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;INSERT  INTO dept_inf(ID,NAME,REMARK) VALUES (1,'技术部','技术部'),(2,'运营部','运营部'),(3,'财务部','财务部'),(5,'总公办','总公办'),(6,'市场部','市场部'),(7,'教学部','教学部');#创建表job_infCREATE TABLE job_inf (  ID INT(11) NOT NULL AUTO_INCREMENT,  NAME VARCHAR(50) NOT NULL,  REMARK VARCHAR(300) DEFAULT NULL,  PRIMARY KEY (ID)) ENGINE=INNODB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;INSERT  INTO job_inf(ID,NAME,REMARK) VALUES (1,'职员','职员'),(2,'Java开发工程师','Java开发工程师'),(3,'Java中级开发工程师','Java中级开发工程师'),(4,'Java高级开发工程师','Java高级开发工程师'),(5,'系统管理员','系统管理员'),(6,'架构师','架构师'),(7,'主管','主管'),(8,'经理','经理'),(9,'总经理','总经理');#创建表user_infCREATE TABLE user_inf (  ID INT(11) NOT NULL AUTO_INCREMENT,  loginname VARCHAR(20) NOT NULL,  PASSWORD VARCHAR(16) NOT NULL,  STATUS INT(11) NOT NULL DEFAULT '1',  createdate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  username VARCHAR(20) DEFAULT NULL,  PRIMARY KEY (ID)) ENGINE=INNODB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;INSERT  INTO user_inf(ID,loginname,PASSWORD,USERSTATUS,createdate,username) VALUES (1,'admin','123456',2,'2016-03-12 09:34:28','超级管理员');#创建表employee_infCREATE TABLE employee_inf (  ID INT(11) NOT NULL AUTO_INCREMENT,  DEPT_ID INT(11) NOT NULL,  JOB_ID INT(11) NOT NULL,  NAME VARCHAR(20) NOT NULL,  CARD_ID VARCHAR(18) NOT NULL,  ADDRESS VARCHAR(50) NOT NULL,  POST_CODE VARCHAR(50) DEFAULT NULL,  TEL VARCHAR(16) DEFAULT NULL,  PHONE VARCHAR(11) NOT NULL,  QQ_NUM VARCHAR(10) DEFAULT NULL,  EMAIL VARCHAR(50) NOT NULL,  SEX INT(11) NOT NULL DEFAULT '1',  PARTY VARCHAR(10) DEFAULT NULL,  BIRTHDAY DATETIME DEFAULT NULL,  RACE VARCHAR(100) DEFAULT NULL,  EDUCATION VARCHAR(10) DEFAULT NULL,  SPECIALITY VARCHAR(20) DEFAULT NULL,  HOBBY VARCHAR(100) DEFAULT NULL,  REMARK VARCHAR(500) DEFAULT NULL,  CREATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  PRIMARY KEY (ID),  KEY FK_EMP_DEPT (DEPT_ID),  KEY FK_EMP_JOB (JOB_ID),  CONSTRAINT FK_EMP_DEPT FOREIGN KEY (DEPT_ID) REFERENCES dept_inf (ID),  CONSTRAINT FK_EMP_JOB FOREIGN KEY (JOB_ID) REFERENCES job_inf (ID)) ENGINE=INNODB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;INSERT  INTO employee_inf(ID,DEPT_ID,JOB_ID,NAME,CARD_ID,ADDRESS,POST_CODE,TEL, PHONE,QQ_NUM,EMAIL,SEX,PARTY,BIRTHDAY,RACE,EDUCATION,SPECIALITY,HOBBY,REMARK,CREATE_DATE) VALUES (1,1,8,'爱丽丝','4328011988','广州天河','510000','020-77777777', '13902001111','36750066','251425887@qq.com',0,'党员','1980-01-01 00:00:00','满','本科','美声','唱歌','四大天王','2016-03-14 11:35:18'),(2,2,1,'杰克','22623','43234','42427424','42242','4247242','42424', '8********@qq.com',2,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'2016-03-14 11:35:18'), (3,1,2,'bb','432801197711251038','广州','510000','020-99999999','13907351532', '36750064','36750064@qq.com',1,'党员','1977-11-25 00:00:00','汉','本科','计算机','爬山','无','2016-07-14 09:54:52');#创建表notice_infCREATE TABLE notice_inf (  ID INT(11) NOT NULL AUTO_INCREMENT,  TITLE VARCHAR(50) NOT NULL,  CONTENT TEXT NOT NULL,  CREATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  USER_ID INT(11) DEFAULT NULL,  PRIMARY KEY (ID),  KEY FK_NOTICE_USER (USER_ID),  CONSTRAINT FK_NOTICE_USER FOREIGN KEY (USER_ID) REFERENCES user_inf (ID)) ENGINE=INNODB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;#创建表document_infCREATE TABLE document_inf (  ID INT(11) NOT NULL AUTO_INCREMENT,  TITLE VARCHAR(50) NOT NULL,  filename VARCHAR(300) NOT NULL,  REMARK VARCHAR(300) DEFAULT NULL,  CREATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  USER_ID INT(11) DEFAULT NULL,  PRIMARY KEY (ID),  KEY FK_DOCUMENT_USER (USER_ID),  CONSTRAINT FK_DOCUMENT_USER FOREIGN KEY (USER_ID) REFERENCES user_inf (ID)) ENGINE=INNODB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;</code></pre><h3 id="设计实体化实体"><a href="#设计实体化实体" class="headerlink" title="设计实体化实体"></a>设计实体化实体</h3><p>将六个数据库表转化为六个PO 分别对应：</p><p>user_info   ——– User    dept_info ———- Dept</p><p>job_info ——– Job    employee_info ——–Employee</p><p>notice_info  ——–Notice    document_info ———-&gt; Document</p><p>可以借助IDEA中插件MyBatisCodeHelperPro中自动生成pojo：<br><img width="200" src="https://res.cloudinary.com/ds5gmzvbq/image/upload/v1566456430/1_gnbnfo.png"> <img width="200" src="https://res.cloudinary.com/ds5gmzvbq/image/upload/v1566456431/2_htf4ng.png"></p><p>图中1所指的是po的类名 2：所在的包 </p><p>User.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String loginname<span class="token punctuation">;</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer status<span class="token punctuation">;</span>    <span class="token keyword">private</span> Date createDate<span class="token punctuation">;</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Dept.java:</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dept</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String remark<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Job.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Job</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String remark<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Employee.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>format<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>DateTimeFormat<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> Dept dept<span class="token punctuation">;</span>    <span class="token keyword">private</span> Job job<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String cardId<span class="token punctuation">;</span>    <span class="token keyword">private</span> String address<span class="token punctuation">;</span>    <span class="token keyword">private</span> String postCode<span class="token punctuation">;</span>    <span class="token keyword">private</span> String tel<span class="token punctuation">;</span>    <span class="token keyword">private</span> String phone<span class="token punctuation">;</span>    <span class="token keyword">private</span> String qqNum<span class="token punctuation">;</span>    <span class="token keyword">private</span> String email<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer sex<span class="token punctuation">;</span>    <span class="token keyword">private</span> String party<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 使用@ModelAttribute接受参数时     * form表单中有日期，Spring不知如何转换，     * 要在实体类的日期上加@DateTimeFormat(pattern="yyyy-MM-dd")注解     */</span>    <span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern<span class="token operator">=</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date birthday<span class="token punctuation">;</span>    <span class="token keyword">private</span> String race<span class="token punctuation">;</span>    <span class="token keyword">private</span> String education<span class="token punctuation">;</span>    <span class="token keyword">private</span> String speciality<span class="token punctuation">;</span>    <span class="token keyword">private</span> String hobby<span class="token punctuation">;</span>    <span class="token keyword">private</span> String remark<span class="token punctuation">;</span>    <span class="token keyword">private</span> Date createDate<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Notice.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Notice</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String title<span class="token punctuation">;</span>    <span class="token keyword">private</span> String content<span class="token punctuation">;</span>    <span class="token keyword">private</span> Date createDate<span class="token punctuation">;</span>    <span class="token keyword">private</span> User user<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Document.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>MultipartFile<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Document</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String title<span class="token punctuation">;</span>    <span class="token keyword">private</span> String fileName<span class="token punctuation">;</span>    <span class="token keyword">private</span> MultipartFile file<span class="token punctuation">;</span>    <span class="token keyword">private</span> String remark<span class="token punctuation">;</span>    <span class="token keyword">private</span> Date createDate<span class="token punctuation">;</span>    <span class="token keyword">private</span> User user<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="实现DAO持久层"><a href="#实现DAO持久层" class="headerlink" title="实现DAO持久层"></a>实现DAO持久层</h3><p>每个DAO组件包含了数据库的访问逻辑；每个DAO组件可对一个数据库表完成基本的CRUD等操作</p><p><strong>公共常量类：</strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author zhou */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HrmConstants</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//数据库表常量</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String USERTABLE <span class="token operator">=</span> <span class="token string">"user_inf"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String DEPTTABLE <span class="token operator">=</span> <span class="token string">"dept_inf"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String JOBTABLE <span class="token operator">=</span> <span class="token string">"job_inf"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String EMPLOYEETABLE <span class="token operator">=</span> <span class="token string">"employee_inf"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String NOTICETABLE <span class="token operator">=</span> <span class="token string">"notice_inf"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String DOCUMENTTABLE <span class="token operator">=</span> <span class="token string">"document_inf"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//登录</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String LOGIN <span class="token operator">=</span> <span class="token string">"loginForm"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//用户的session对象</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String USER_SESSION <span class="token operator">=</span> <span class="token string">"user_session"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//默认每页4条数据</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> PAGE_DEFAULT_SIZE <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="定义DAO接口"><a href="#定义DAO接口" class="headerlink" title="定义DAO接口"></a>定义DAO接口</h4><p>UserDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>UserDynaSqlProvider<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>USERTABLE<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 用户dao接口 * @author zhou */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDao</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 根据登录名和密码查询员工     * @param loginname     * @param password     * @return     */</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from "</span> <span class="token operator">+</span> USERTABLE <span class="token operator">+</span> <span class="token string">" where loginname=#{loginname} and password = #{password}"</span><span class="token punctuation">)</span>    User <span class="token function">selectByLoginnameAndPassword</span><span class="token punctuation">(</span>            <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"loginname"</span><span class="token punctuation">)</span> String loginname<span class="token punctuation">,</span>            <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span> String password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据id查询用户     * @param id     * @return     */</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from "</span> <span class="token operator">+</span> USERTABLE <span class="token operator">+</span> <span class="token string">" where id = #{id}"</span><span class="token punctuation">)</span>    User <span class="token function">selectById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据id删除用户     * @param id     */</span>    <span class="token annotation punctuation">@Delete</span><span class="token punctuation">(</span><span class="token string">"delete from "</span> <span class="token operator">+</span> USERTABLE <span class="token operator">+</span> <span class="token string">" where id = #{id}"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">deleteById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动态修改用户     * @param user     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span>UserDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token string">"updateUser"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动态查询     * @param params     * @return     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span> UserDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token string">"selectWhitParam"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">selectByPage</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据参数查询用户总数     * @param params     * @return     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span>UserDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token string">"count"</span><span class="token punctuation">)</span>    Integer <span class="token function">count</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动态插入用户     * @param user     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> UserDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token string">"insertUser"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>UserDynaSqlProvider.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>SQL<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>USERTABLE<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * UserDao接口中动态SQL实现 * @author zhou */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDynaSqlProvider</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 分页动态查询     * @param params     * @return     */</span>    <span class="token keyword">public</span> String <span class="token function">selectWhitParam</span><span class="token punctuation">(</span><span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String sql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">SELECT</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">FROM</span><span class="token punctuation">(</span>USERTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    User user <span class="token operator">=</span> <span class="token punctuation">(</span>User<span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" username like concat('%',#{user.username},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" status like concat('%',#{user.status},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            sql <span class="token operator">+=</span> <span class="token string">" limit #{pageModel.firstLimitParam},#{pageModel.pageSize} "</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> sql<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 动态查询总数量     * @param params     * @return     */</span>    <span class="token keyword">public</span> String <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">SELECT</span><span class="token punctuation">(</span><span class="token string">"COUNT(*)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">FROM</span><span class="token punctuation">(</span>USERTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    User user <span class="token operator">=</span> <span class="token punctuation">(</span>User<span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" username like concat('%',#{user.username},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" status like concat('%',#{user.status},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 动态插入     * @param user     * @return     */</span>    <span class="token keyword">public</span> String <span class="token function">insertUser</span><span class="token punctuation">(</span><span class="token keyword">final</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">INSERT_INTO</span><span class="token punctuation">(</span>USERTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"#{username}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"status"</span><span class="token punctuation">,</span><span class="token string">"#{status}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getLoginname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">getLoginname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"loginname"</span><span class="token punctuation">,</span><span class="token string">"#{loginname}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> <span class="token string">"#{password}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 动态更新     * @param user     * @return     */</span>    <span class="token keyword">public</span> String <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token keyword">final</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">UPDATE</span><span class="token punctuation">(</span>USERTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" username = #{username} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getLoginname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" loginname = #{loginname} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" password = #{password} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" status = #{status} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getCreateDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" create_date = #{createDate} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" id = #{id}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>DeptDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>DeptDynaSqlProvider<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Dept<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>DEPTTABLE<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 部门DeptDao接口 * @author zhou */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DeptDao</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 动态查询     * @param params     * @return     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> DeptDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"selectWhitParam"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Dept<span class="token operator">></span> <span class="token function">selectByPage</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动态查询总数     * @param params     * @return     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> DeptDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"count"</span><span class="token punctuation">)</span>    Integer <span class="token function">count</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from "</span><span class="token operator">+</span>DEPTTABLE<span class="token operator">+</span><span class="token string">" "</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Dept<span class="token operator">></span> <span class="token function">selectAllDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据id查询部门     * @param id     * @return     */</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from "</span> <span class="token operator">+</span> DEPTTABLE <span class="token operator">+</span> <span class="token string">" where id = #{id}"</span><span class="token punctuation">)</span>    Dept <span class="token function">selectById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据id删除部门     * @param id     */</span>    <span class="token annotation punctuation">@Delete</span><span class="token punctuation">(</span><span class="token string">" delete from "</span> <span class="token operator">+</span> DEPTTABLE <span class="token operator">+</span> <span class="token string">" where id = #{id}"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">deleteById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动态插入部门     * @param dept     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> DeptDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"insertDept"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span>Dept dept<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动态修改用户     * @param dept     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> DeptDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"updateDept"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>Dept dept<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre><code>package top.zhoulis.www.dao.provider;import org.apache.ibatis.jdbc.SQL;import top.zhoulis.www.domain.Dept;import java.util.Map;import static top.zhoulis.www.util.common.HrmConstants.DEPTTABLE;public class DeptDynaSqlProvider {    /**     * 分页动态查询     * @param params     * @return     */    public String selectWhitParam(final Map&lt;String, Object&gt; params) {        String sql = new SQL(){            {                SELECT(&quot;*&quot;);                FROM(DEPTTABLE);                if (params.get(&quot;dept&quot;) != null) {                    Dept dept = (Dept) params.get(&quot;dept&quot;);                    if (dept.getName() != null &amp;&amp; !dept.getName().equals(&quot;&quot;)) {                        WHERE(&quot; name like concat(&#39;%&#39;,#{dept.name},&#39;%&#39;)&quot;);                    }                }            }        }.toString();        if (params.get(&quot;pageModel&quot;) != null) {            sql += &quot; limit #{pageModel.firstLimitParam}, #{pageModel.pageSize} &quot;;        }        return sql;    }    /**     * 动态查询总数量     * @param params     * @return     */    public String count(final Map&lt;String, Object&gt; params) {        return new SQL(){            {                SELECT(&quot;count(*)&quot;);                FROM(DEPTTABLE);                if (params.get(&quot;dept&quot;) != null) {                    Dept dept = (Dept) params.get(&quot;dept&quot;);                    if (dept.getName() != null &amp;&amp; !dept.getName().equals(&quot;&quot;)) {                        WHERE(&quot; name like concat(&#39;%&#39;,#{dept.name},&#39;%&#39;) &quot;);                    }                }            }        }.toString();    }    /**     * 动态插入部门     * @param dept     * @return     */    public String insertDept(final Dept dept) {        return new SQL(){            {                INSERT_INTO(DEPTTABLE);                if (dept.getName() != null &amp;&amp; !dept.getName().equals(&quot;&quot;)) {                    VALUES(&quot;name&quot;,&quot;#{name}&quot;);                }                if (dept.getRemark() != null &amp;&amp; !dept.getRemark().equals(&quot;&quot;)) {                    VALUES(&quot;remark&quot;, &quot;#{remark}&quot;);                }            }        }.toString();    }    public String updateDept(final Dept dept) {        return new SQL(){            {                UPDATE(DEPTTABLE);                if (dept.getName() != null) {                    SET(&quot; name = #{name} &quot;);                }                if (dept.getRemark() != null) {                    SET(&quot; remark = #{remark} &quot;);                }                WHERE(&quot; id = #{id} &quot;);            }        }.toString();    }}</code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>mapping<span class="token punctuation">.</span>FetchType<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>DocumentDynaSqlProvider<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Document<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>DOCUMENTTABLE<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DocumentDao</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 动态查询</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span>DocumentDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">"selectWhitParam"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Results</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>column<span class="token operator">=</span><span class="token string">"id"</span><span class="token punctuation">,</span>property<span class="token operator">=</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column<span class="token operator">=</span><span class="token string">"CREATE_DATE"</span><span class="token punctuation">,</span>property<span class="token operator">=</span><span class="token string">"createDate"</span><span class="token punctuation">,</span>javaType<span class="token operator">=</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column<span class="token operator">=</span><span class="token string">"USER_ID"</span><span class="token punctuation">,</span>property<span class="token operator">=</span><span class="token string">"user"</span><span class="token punctuation">,</span>                    one<span class="token operator">=</span><span class="token annotation punctuation">@One</span><span class="token punctuation">(</span>select<span class="token operator">=</span><span class="token string">"org.fkit.hrm.dao.UserDao.selectById"</span><span class="token punctuation">,</span>                            fetchType<span class="token operator">=</span> FetchType<span class="token punctuation">.</span>EAGER<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Document<span class="token operator">></span> <span class="token function">selectByPage</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span> DocumentDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">"count"</span><span class="token punctuation">)</span>    Integer <span class="token function">count</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 动态插入文档</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span>DocumentDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">"insertDocument"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span>Document document<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from "</span><span class="token operator">+</span>DOCUMENTTABLE<span class="token operator">+</span><span class="token string">" where ID = #{id}"</span><span class="token punctuation">)</span>    Document <span class="token function">selectById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 根据id删除文档</span>    <span class="token annotation punctuation">@Delete</span><span class="token punctuation">(</span><span class="token string">" delete from "</span><span class="token operator">+</span>DOCUMENTTABLE<span class="token operator">+</span><span class="token string">" where id = #{id} "</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">deleteById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 动态修改文档</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span>DocumentDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">"updateDocument"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>Document document<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>SQL<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Document<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>DOCUMENTTABLE<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DocumentDynaSqlProvider</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 分页动态查询</span>    <span class="token keyword">public</span> String <span class="token function">selectWhitParam</span><span class="token punctuation">(</span><span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">{</span>        String sql <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">SELECT</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">FROM</span><span class="token punctuation">(</span>DOCUMENTTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"document"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                    Document document <span class="token operator">=</span> <span class="token punctuation">(</span>Document<span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"document"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">"  title LIKE CONCAT ('%',#{document.title},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            sql <span class="token operator">+=</span> <span class="token string">" limit #{pageModel.firstLimitParam} , #{pageModel.pageSize}  "</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> sql<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 动态查询总数量</span>    <span class="token keyword">public</span> String <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">SELECT</span><span class="token punctuation">(</span><span class="token string">"count(*)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">FROM</span><span class="token punctuation">(</span>DOCUMENTTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"document"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                    Document document <span class="token operator">=</span> <span class="token punctuation">(</span>Document<span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"document"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">"  title LIKE CONCAT ('%',#{document.title},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 动态插入</span>    <span class="token keyword">public</span> String <span class="token function">insertDocument</span><span class="token punctuation">(</span><span class="token keyword">final</span> Document document<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">INSERT_INTO</span><span class="token punctuation">(</span>DOCUMENTTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> <span class="token string">"#{title}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"filename"</span><span class="token punctuation">,</span> <span class="token string">"#{fileName}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"remark"</span><span class="token punctuation">,</span> <span class="token string">"#{remark}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> document<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"user_id"</span><span class="token punctuation">,</span> <span class="token string">"#{user.id}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 动态更新</span>    <span class="token keyword">public</span> String <span class="token function">updateDocument</span><span class="token punctuation">(</span><span class="token keyword">final</span> Document document<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">UPDATE</span><span class="token punctuation">(</span>DOCUMENTTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" title = #{title} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" filename = #{fileName} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">"remark = #{remark}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> document<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">"user_id = #{user.id}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" id = #{id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>mapping<span class="token punctuation">.</span>FetchType<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>EmployeeDynaSqlProvider<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>EMPLOYEETABLE<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EmployeeDao</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 根据参数动态查询员工总数     * @param params     * @return     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> EmployeeDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"count"</span><span class="token punctuation">)</span>    Integer <span class="token function">count</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据参数动态查询员工     * @param params     * @return     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> EmployeeDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"selectWhitParam"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Results</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> column <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"CARD_ID"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"cardId"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"POST_CODE"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"postCode"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"QQ_NUM"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"qqNum"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"BIRTHDAY"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"birthday"</span><span class="token punctuation">,</span> javaType <span class="token operator">=</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"CREATE_DATE"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"createDate"</span><span class="token punctuation">,</span> javaType <span class="token operator">=</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"DEPT_ID"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"dept"</span><span class="token punctuation">,</span>                    one <span class="token operator">=</span> <span class="token annotation punctuation">@One</span><span class="token punctuation">(</span>select <span class="token operator">=</span> <span class="token string">"org.fkit.hrm.dao.DeptDao.selectById"</span><span class="token punctuation">,</span>                            fetchType <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>EAGER<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"JOB_ID"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"job"</span><span class="token punctuation">,</span>                    one <span class="token operator">=</span> <span class="token annotation punctuation">@One</span><span class="token punctuation">(</span>select <span class="token operator">=</span> <span class="token string">"org.fkit.hrm.dao.JobDao.selectById"</span><span class="token punctuation">,</span>                            fetchType <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>EAGER<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Employee<span class="token operator">></span> <span class="token function">selectByPage</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动态插入员工     * @param employee     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> EmployeeDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"insertEmployee"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据id删除员工     * @param id     */</span>    <span class="token annotation punctuation">@Delete</span><span class="token punctuation">(</span><span class="token string">" delete from "</span> <span class="token operator">+</span> EMPLOYEETABLE <span class="token operator">+</span> <span class="token string">" where id = #{id} "</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">deleteById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据id查询员工     * @param id     * @return     */</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from "</span> <span class="token operator">+</span> EMPLOYEETABLE <span class="token operator">+</span> <span class="token string">" where id = #{id} "</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Results</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> column <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"CARD_ID"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"cardId"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"POST_CODE"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"postCode"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"QQ_NUM"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"qqNum"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"BIRTHDAY"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"birthday"</span><span class="token punctuation">,</span> javaType <span class="token operator">=</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"CREATE_DATE"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"createDate"</span><span class="token punctuation">,</span> javaType <span class="token operator">=</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"DEPT_ID"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"dept"</span><span class="token punctuation">,</span>                    one <span class="token operator">=</span> <span class="token annotation punctuation">@One</span><span class="token punctuation">(</span>select <span class="token operator">=</span> <span class="token string">"org.fkit.hrm.dao.DeptDao.selectById"</span><span class="token punctuation">,</span>                            fetchType <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>EAGER<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">"JOB_ID"</span><span class="token punctuation">,</span> property <span class="token operator">=</span> <span class="token string">"job"</span><span class="token punctuation">,</span>                    one <span class="token operator">=</span> <span class="token annotation punctuation">@One</span><span class="token punctuation">(</span>select <span class="token operator">=</span> <span class="token string">"org.fkit.hrm.dao.JobDao.selectById"</span><span class="token punctuation">,</span>                            fetchType <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>EAGER<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    Employee <span class="token function">selectById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> EmployeeDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"updateEmployee"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>SQL<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>EMPLOYEETABLE<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmployeeDynaSqlProvider</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 分页动态查询</span>    <span class="token keyword">public</span> String <span class="token function">selectWhitParam</span><span class="token punctuation">(</span><span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String sql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">SELECT</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">FROM</span><span class="token punctuation">(</span>EMPLOYEETABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"employee"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Employee employee <span class="token operator">=</span> <span class="token punctuation">(</span>Employee<span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"employee"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> employee<span class="token punctuation">.</span><span class="token function">getDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> employee<span class="token punctuation">.</span><span class="token function">getDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" DEPT_ID = #{employee.dept.id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> employee<span class="token punctuation">.</span><span class="token function">getJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> employee<span class="token punctuation">.</span><span class="token function">getJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" JOB_ID = #{employee.job.id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>employee<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">"  NAME LIKE CONCAT ('%',#{employee.name},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>employee<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" phone LIKE CONCAT ('%',#{employee.phone},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getCardId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>employee<span class="token punctuation">.</span><span class="token function">getCardId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" card_id LIKE CONCAT ('%',#{employee.cardId},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> employee<span class="token punctuation">.</span><span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">"sex = #{employee.sex}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            sql <span class="token operator">+=</span> <span class="token string">" limit #{pageModel.firstLimitParam} , #{pageModel.pageSize}  "</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> sql<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 动态查询总数量</span>    <span class="token keyword">public</span> String <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">SELECT</span><span class="token punctuation">(</span><span class="token string">"count(*)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">FROM</span><span class="token punctuation">(</span>EMPLOYEETABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"employee"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Employee employee <span class="token operator">=</span> <span class="token punctuation">(</span>Employee<span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"employee"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> employee<span class="token punctuation">.</span><span class="token function">getDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> employee<span class="token punctuation">.</span><span class="token function">getDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" DEPT_ID = #{employee.dept.id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> employee<span class="token punctuation">.</span><span class="token function">getJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> employee<span class="token punctuation">.</span><span class="token function">getJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" JOB_ID = #{employee.job.id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>employee<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">"  NAME LIKE CONCAT ('%',#{employee.name},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>employee<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" phone LIKE CONCAT ('%',#{employee.phone},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getCardId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>employee<span class="token punctuation">.</span><span class="token function">getCardId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" card_id LIKE CONCAT ('%',#{employee.cardId},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> employee<span class="token punctuation">.</span><span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">"sex = #{employee.sex}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 动态插入</span>    <span class="token keyword">public</span> String <span class="token function">insertEmployee</span><span class="token punctuation">(</span><span class="token keyword">final</span> Employee employee<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">INSERT_INTO</span><span class="token punctuation">(</span>EMPLOYEETABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"#{name}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getCardId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"card_id"</span><span class="token punctuation">,</span> <span class="token string">"#{cardId}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">,</span> <span class="token string">"#{address}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getPostCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"post_code"</span><span class="token punctuation">,</span> <span class="token string">"#{postCode}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getTel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"tel"</span><span class="token punctuation">,</span> <span class="token string">"#{tel}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"phone"</span><span class="token punctuation">,</span> <span class="token string">"#{phone}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getQqNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"qq_num"</span><span class="token punctuation">,</span> <span class="token string">"#{qqNum}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">,</span> <span class="token string">"#{email}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">,</span> <span class="token string">"#{sex}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getParty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"party"</span><span class="token punctuation">,</span> <span class="token string">"#{party}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getBirthday</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"birthday"</span><span class="token punctuation">,</span> <span class="token string">"#{birthday}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getRace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"race"</span><span class="token punctuation">,</span> <span class="token string">"#{race}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getEducation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"education"</span><span class="token punctuation">,</span> <span class="token string">"#{education}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getSpeciality</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"speciality"</span><span class="token punctuation">,</span> <span class="token string">"#{speciality}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getHobby</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"hobby"</span><span class="token punctuation">,</span> <span class="token string">"#{hobby}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"remark"</span><span class="token punctuation">,</span> <span class="token string">"#{remark}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getCreateDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"create_Date"</span><span class="token punctuation">,</span> <span class="token string">"#{createDate}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"dept_id"</span><span class="token punctuation">,</span> <span class="token string">"#{dept.id}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"job_id"</span><span class="token punctuation">,</span> <span class="token string">"#{job.id}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 动态更新</span>    <span class="token keyword">public</span> String <span class="token function">updateEmployee</span><span class="token punctuation">(</span><span class="token keyword">final</span> Employee employee<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">UPDATE</span><span class="token punctuation">(</span>EMPLOYEETABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" name = #{name} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getCardId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" card_id = #{cardId} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" address = #{address} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getPostCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" post_code = #{postCode} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getTel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" tel = #{tel} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" phone = #{phone} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getQqNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" qq_num = #{qqNum} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" email = #{email} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" sex = #{sex} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getParty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" party = #{party} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getBirthday</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" birthday = #{birthday} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getRace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" race = #{race} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getEducation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" education = #{education} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getSpeciality</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" speciality = #{speciality} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getHobby</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" hobby = #{hobby} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" remark = #{remark} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getCreateDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" create_Date = #{createDate} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" dept_id = #{dept.id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" job_id = #{job.id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" id = #{id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Delete<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Select<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>SelectProvider<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>JobDynaSqlProvider<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Job<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>JOBTABLE<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">JobDao</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 根据id查询职位     * @param id     * @return     */</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from "</span> <span class="token operator">+</span> JOBTABLE <span class="token operator">+</span> <span class="token string">" WHERE id = #{id}"</span><span class="token punctuation">)</span>    Job <span class="token function">selectById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 查询所有的职位     * @return     */</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from "</span> <span class="token operator">+</span> JOBTABLE <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Job<span class="token operator">></span> <span class="token function">selectAllJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动态查询     * @param params     * @return     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> JobDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"selectWhitParam"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Job<span class="token operator">></span> <span class="token function">selectByPage</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> JobDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"count"</span><span class="token punctuation">)</span>    Integer <span class="token function">count</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据id删除job     * @param id     */</span>    <span class="token annotation punctuation">@Delete</span><span class="token punctuation">(</span><span class="token string">" delete  from "</span> <span class="token operator">+</span> JOBTABLE <span class="token operator">+</span> <span class="token string">" where id = #{id} "</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">deleteById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动态插入job     * @param job     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> JobDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"insertJob"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span>Job job<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动态更新     * @param job     */</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type <span class="token operator">=</span> JobDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"updateJob"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>Job job<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>SQL<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Job<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>JOBTABLE<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JobDynaSqlProvider</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 分页动态查询     * @param params     * @return     */</span>    <span class="token keyword">public</span> String <span class="token function">selectWhitParam</span><span class="token punctuation">(</span><span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String sql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">SELECT</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">FROM</span><span class="token punctuation">(</span>JOBTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"job"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Job job <span class="token operator">=</span> <span class="token punctuation">(</span>Job<span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"job"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> job<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" name like concat('%',#{job.name},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            sql <span class="token operator">+=</span> <span class="token string">" limit #{pageModel.firstLimitParam}, #{pageModel.pageSize} "</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> sql<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 动态查询总数量     * @param params     * @return     */</span>    <span class="token keyword">public</span> String <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">SELECT</span><span class="token punctuation">(</span><span class="token string">"count(*)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">FROM</span><span class="token punctuation">(</span>JOBTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"job"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Job job <span class="token operator">=</span> <span class="token punctuation">(</span>Job<span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"job"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> job<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" name like concat('%',#{job.name},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 动态插入     * @param job     * @return     */</span>    <span class="token keyword">public</span> String <span class="token function">insertJob</span><span class="token punctuation">(</span><span class="token keyword">final</span> Job job<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">INSERT_INTO</span><span class="token punctuation">(</span>JOBTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> job<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"#{name}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> job<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"remark"</span><span class="token punctuation">,</span> <span class="token string">"#{remark}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 动态更新     * @param job     * @return     */</span>    <span class="token keyword">public</span> String <span class="token function">updateJob</span><span class="token punctuation">(</span><span class="token keyword">final</span> Job job<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">UPDATE</span><span class="token punctuation">(</span>JOBTABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" name = #{name} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" remark = #{remark} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" id = #{id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>mapping<span class="token punctuation">.</span>FetchType<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>NoticeDynaSqlProvider<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Notice<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>NOTICETABLE<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">NoticeDao</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 动态查询</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span>NoticeDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">"selectWhitParam"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Results</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>column<span class="token operator">=</span><span class="token string">"id"</span><span class="token punctuation">,</span>property<span class="token operator">=</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column<span class="token operator">=</span><span class="token string">"CREATE_DATE"</span><span class="token punctuation">,</span>property<span class="token operator">=</span><span class="token string">"createDate"</span><span class="token punctuation">,</span>javaType<span class="token operator">=</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>column<span class="token operator">=</span><span class="token string">"USER_ID"</span><span class="token punctuation">,</span>property<span class="token operator">=</span><span class="token string">"user"</span><span class="token punctuation">,</span>                    one<span class="token operator">=</span><span class="token annotation punctuation">@One</span><span class="token punctuation">(</span>select<span class="token operator">=</span><span class="token string">"org.fkit.hrm.dao.UserDao.selectById"</span><span class="token punctuation">,</span>                            fetchType<span class="token operator">=</span> FetchType<span class="token punctuation">.</span>EAGER<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Notice<span class="token operator">></span> <span class="token function">selectByPage</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span> NoticeDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">"count"</span><span class="token punctuation">)</span>    Integer <span class="token function">count</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from "</span><span class="token operator">+</span>NOTICETABLE<span class="token operator">+</span><span class="token string">" where ID = #{id}"</span><span class="token punctuation">)</span>    Notice <span class="token function">selectById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 根据id删除公告</span>    <span class="token annotation punctuation">@Delete</span><span class="token punctuation">(</span><span class="token string">" delete from "</span><span class="token operator">+</span>NOTICETABLE<span class="token operator">+</span><span class="token string">" where id = #{id} "</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">deleteById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 动态插入公告</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span>NoticeDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">"insertNotice"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span>Notice notice<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 动态修改公告</span>    <span class="token annotation punctuation">@SelectProvider</span><span class="token punctuation">(</span>type<span class="token operator">=</span>NoticeDynaSqlProvider<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">"updateNotice"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>Notice notice<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>provider<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>SQL<span class="token punctuation">;</span><span class="token keyword">import</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Notice<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> top<span class="token punctuation">.</span>zhoulis<span class="token punctuation">.</span>www<span class="token punctuation">.</span>util<span class="token punctuation">.</span>common<span class="token punctuation">.</span>HrmConstants<span class="token punctuation">.</span>NOTICETABLE<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NoticeDynaSqlProvider</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 分页动态查询</span>    <span class="token keyword">public</span> String <span class="token function">selectWhitParam</span><span class="token punctuation">(</span><span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">{</span>        String sql <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">SELECT</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">FROM</span><span class="token punctuation">(</span>NOTICETABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"notice"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                    Notice notice <span class="token operator">=</span> <span class="token punctuation">(</span>Notice<span class="token punctuation">)</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"notice"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notice<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">"  title LIKE CONCAT ('%',#{notice.title},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notice<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">"  content LIKE CONCAT ('%',#{notice.content},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"pageModel"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            sql <span class="token operator">+=</span> <span class="token string">" limit #{pageModel.firstLimitParam} , #{pageModel.pageSize}  "</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> sql<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 动态查询总数量</span>    <span class="token keyword">public</span> String <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">SELECT</span><span class="token punctuation">(</span><span class="token string">"count(*)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">FROM</span><span class="token punctuation">(</span>NOTICETABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"notice"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                    Notice notice <span class="token operator">=</span> <span class="token punctuation">(</span>Notice<span class="token punctuation">)</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"notice"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notice<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">"  title LIKE CONCAT ('%',#{notice.title},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notice<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">"  content LIKE CONCAT ('%',#{notice.content},'%') "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 动态插入</span>    <span class="token keyword">public</span> String <span class="token function">insertNotice</span><span class="token punctuation">(</span><span class="token keyword">final</span> Notice notice<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">INSERT_INTO</span><span class="token punctuation">(</span>NOTICETABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notice<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> <span class="token string">"#{title}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notice<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"#{content}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> notice<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">"user_id"</span><span class="token punctuation">,</span> <span class="token string">"#{user.id}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 动态更新</span>    <span class="token keyword">public</span> String <span class="token function">updateNotice</span><span class="token punctuation">(</span><span class="token keyword">final</span> Notice notice<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">{</span>                <span class="token function">UPDATE</span><span class="token punctuation">(</span>NOTICETABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notice<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" title = #{title} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notice<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" content = #{content} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> notice<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">SET</span><span class="token punctuation">(</span><span class="token string">" user_id = #{user.id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token string">" id = #{id} "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ssm小项目：人事管理系统-一&quot;&gt;&lt;a href=&quot;#ssm小项目：人事管理系统-一&quot; class=&quot;headerlink&quot; title=&quot;ssm小项目：人事管理系统(一)&quot;&gt;&lt;/a&gt;ssm小项目：人事管理系统(一)&lt;/h2&gt;&lt;p&gt;该项目包括用户管理、部门管理、职
      
    
    </summary>
    
      <category term="ssm" scheme="http://www.zhoulis.top/categories/ssm/"/>
    
    
      <category term="java" scheme="http://www.zhoulis.top/tags/java/"/>
    
      <category term="ssm" scheme="http://www.zhoulis.top/tags/ssm/"/>
    
  </entry>
  
  <entry>
    <title>org.springframework.beans.factory.UnsatisfiedDependencyException异常</title>
    <link href="http://www.zhoulis.top/exception"/>
    <id>http://www.zhoulis.top/exception</id>
    <published>2019-08-20T12:47:00.000Z</published>
    <updated>2019-09-22T03:18:16.658Z</updated>
    
    <content type="html"><![CDATA[<h3 id="org-springframework-beans-factory-UnsatisfiedDependencyException异常："><a href="#org-springframework-beans-factory-UnsatisfiedDependencyException异常：" class="headerlink" title="org.springframework.beans.factory.UnsatisfiedDependencyException异常："></a>org.springframework.beans.factory.UnsatisfiedDependencyException异常：</h3><pre><code>org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#39;dictServiceImpl&#39;: Unsatisfied dependency expressed through field &#39;dictMapper&#39;; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#39;dictMapper&#39; defined in file [G:\javaproject\mybtisspring\target\mybtis-spring\WEB-INF\classes\tk\mybatis\web\mapper\DictMapper.class]: Unsatisfied dependency expressed through bean property &#39;sqlSessionFactory&#39;; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;sqlSessionFactory&#39; defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [mybatis-config.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.logging.LogException: Error setting Log implementation.  Cause: java.lang.NoClassDefFoundError: org/apache/log4j/Priority        at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)        at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)        at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)        at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)        at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4770)        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5236)        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:754)        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:730)        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:744)        at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1730)        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.lang.reflect.Method.invoke(Method.java:498)        at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:287)        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)        at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)        at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:483)        at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:432)        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.lang.reflect.Method.invoke(Method.java:498)        at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:287)        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)        at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)        at com.sun.jmx.remote.security.MBeanServerAccessController.invoke(MBeanServerAccessController.java:468)        at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468)        at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)        at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309)        at java.security.AccessController.doPrivileged(Native Method)        at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1408)        at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.lang.reflect.Method.invoke(Method.java:498)        at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)        at sun.rmi.transport.Transport$1.run(Transport.java:200)        at sun.rmi.transport.Transport$1.run(Transport.java:197)        at java.security.AccessController.doPrivileged(Native Method)        at sun.rmi.transport.Transport.serviceCall(Transport.java:196)        at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:573)        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834)        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688)        at java.security.AccessController.doPrivileged(Native Method)        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)        at java.lang.Thread.run(Thread.java:748)</code></pre><p>解决办法：</p><p>​    在mybatis-config.xml中的settings 中如果有&lt;setting name=”logImpl”value=”LOG4J”/&gt; 那jar有没有导入 文件有没有配置好</p><p>再就是service接口实现类上有没有加上@Service注解.</p><p>再就是扫包的路径有没有拼错</p><p>整合 要把Spring，mybatis配置导入到web.xml中：</p><pre><code>&lt;context-param&gt;    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;    &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;  &lt;/context-param&gt;---------------------&lt;init-param&gt;      &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;      &lt;param-value&gt;classpath:mybatis-servlet.xml&lt;/param-value&gt;    &lt;/init-param&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;org-springframework-beans-factory-UnsatisfiedDependencyException异常：&quot;&gt;&lt;a href=&quot;#org-springframework-beans-factory-UnsatisfiedDependen
      
    
    </summary>
    
      <category term="Exception" scheme="http://www.zhoulis.top/categories/Exception/"/>
    
    
      <category term="java" scheme="http://www.zhoulis.top/tags/java/"/>
    
      <category term="Exceprion" scheme="http://www.zhoulis.top/tags/Exceprion/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis拦截器之下画线键值转驼峰</title>
    <link href="http://www.zhoulis.top/mybatis-hump"/>
    <id>http://www.zhoulis.top/mybatis-hump</id>
    <published>2019-08-18T12:47:00.000Z</published>
    <updated>2019-08-18T13:03:53.990Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis拦截器之下画线键值转驼峰"><a href="#MyBatis拦截器之下画线键值转驼峰" class="headerlink" title="MyBatis拦截器之下画线键值转驼峰"></a>MyBatis拦截器之下画线键值转驼峰</h1><p>​        在使用MyBatis时，为了方便扩展而使用Map类型的返回值。使用Map作为返回值时，Map中的键值就是查询结果中的列名，而列名一般都是大写小写字母或者下画线形式，和Java中使用的驼峰形式不一致，为了保证在使用map时属性一致，可以对结果进行特殊处理——使用拦截器将不同格式的列名转换为Java中的驼峰形式。实现代码如下：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> tk<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>simple<span class="token punctuation">.</span>plugin<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>executor<span class="token punctuation">.</span>resultset<span class="token punctuation">.</span>ResultSetHandler<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Statement<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * MyBatis Map类型下划线key转小写驼峰形式 * * @author zhouli */</span><span class="token annotation punctuation">@Intercepts</span><span class="token punctuation">(</span>   <span class="token comment" spellcheck="true">//ResultSetHandler接口方法签名。在查询方法中被调用</span>        <span class="token annotation punctuation">@Signature</span><span class="token punctuation">(</span>                type <span class="token operator">=</span> ResultSetHandler<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>                method <span class="token operator">=</span> <span class="token string">"handleResultSets"</span><span class="token punctuation">,</span>                args <span class="token operator">=</span> <span class="token punctuation">{</span>Statement<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"unchecked"</span><span class="token punctuation">,</span> <span class="token string">"rawtypes"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CameHumpInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">Interceptor</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Object <span class="token function">intercept</span><span class="token punctuation">(</span>Invocation invocation<span class="token punctuation">)</span> <span class="token keyword">throws</span> Throwable <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Object<span class="token operator">></span> list <span class="token operator">=</span> <span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Object<span class="token operator">></span><span class="token punctuation">)</span> invocation<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Object object <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果时map类型，就对map的key转换</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>object <span class="token keyword">instanceof</span> <span class="token class-name">Map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">processMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Map<span class="token punctuation">)</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理Map类型     * @param map     */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">processMap</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Set<span class="token operator">&lt;</span>String<span class="token operator">></span> keySet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>String key <span class="token operator">:</span> keySet<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//将以大写开头的字符串转换为小写，如果不包含下划线也会处理为驼峰</span>            <span class="token comment" spellcheck="true">//此处只通过这两个简单的标识来判断是否转换</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token string">'A'</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">)</span>                    <span class="token operator">||</span> key<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Object value <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>                map<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token function">underlineToCamelhump</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 将下划线风格替换为驼峰风格     * @param inputString     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">underlineToCamelhump</span><span class="token punctuation">(</span>String inputString<span class="token punctuation">)</span> <span class="token punctuation">{</span>        StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> nextUpperCase <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> inputString<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">char</span> c <span class="token operator">=</span> inputString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token string">'_'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    nextUpperCase <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>nextUpperCase<span class="token punctuation">)</span><span class="token punctuation">{</span>                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>Character<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>Character<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Object <span class="token function">plugin</span><span class="token punctuation">(</span>Object target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> Plugin<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setProperties</span><span class="token punctuation">(</span>Properties properties<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>这个插件很简单，就是循环判断结果。如果是Map类型的结果，就对Map的key进行处理。当数据经过这个拦截器插件处理后，就可以保证在任何数据库中以Map作为结果值类型时，都有一致的key值，可以统一取值。想要使用该插件需要在mybatis-config.xml中配置该插件。</p><pre><code>//拦截器配置&lt;plugins&gt;  &lt;plugin interceptor=&quot;该拦截器的全限定类名&quot;/&gt;&lt;/plugins&gt;</code></pre><p>在上面拦截器代码的26行，<strong>invocation.proceed()执行的结果被强制转换为List类型</strong>。这是因为拦截器接口<strong>ResultSetHandler</strong>的<strong>handleResultSets</strong>方法的返回值为List类型。写拦截器时，<strong>要根据被拦截的方法来确定返回值的类型。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MyBatis拦截器之下画线键值转驼峰&quot;&gt;&lt;a href=&quot;#MyBatis拦截器之下画线键值转驼峰&quot; class=&quot;headerlink&quot; title=&quot;MyBatis拦截器之下画线键值转驼峰&quot;&gt;&lt;/a&gt;MyBatis拦截器之下画线键值转驼峰&lt;/h1&gt;&lt;p&gt;​ 
      
    
    </summary>
    
      <category term="MyBatis" scheme="http://www.zhoulis.top/categories/MyBatis/"/>
    
    
      <category term="java" scheme="http://www.zhoulis.top/tags/java/"/>
    
      <category term="MyBatis" scheme="http://www.zhoulis.top/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis缓存</title>
    <link href="http://www.zhoulis.top/mybatis-cache"/>
    <id>http://www.zhoulis.top/mybatis-cache</id>
    <published>2019-08-17T13:25:00.000Z</published>
    <updated>2019-08-17T13:27:52.087Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MyBatis缓存"><a href="#MyBatis缓存" class="headerlink" title="MyBatis缓存"></a>MyBatis缓存</h2><h4 id="一级缓存"><a href="#一级缓存" class="headerlink" title="一级缓存"></a>一级缓存</h4><blockquote><p>一级缓存（也叫本地缓存）默认会启用，而且不能控制</p></blockquote><p>先看一个示例</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CacheTest</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapperTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testL1Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        SqlSession sqlSession <span class="token operator">=</span> <span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        SysUser user1 <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            UserMapper userMapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            user1 <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>1l<span class="token punctuation">)</span><span class="token punctuation">;</span>            user1<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token string">"New Name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            SysUser user2 <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>1l<span class="token punctuation">)</span><span class="token punctuation">;</span>            Assert<span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">"New Name"</span><span class="token punctuation">,</span>user2<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Assert<span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>user1<span class="token punctuation">,</span>user2<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user1 <span class="token operator">==</span> user2<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>user2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开启新的sqlSession"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sqlSession <span class="token operator">=</span> <span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            UserMapper userMapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            SysUser user2 <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>1l<span class="token punctuation">)</span><span class="token punctuation">;</span>            Assert<span class="token punctuation">.</span><span class="token function">assertNotEquals</span><span class="token punctuation">(</span><span class="token string">"New Name"</span><span class="token punctuation">,</span>user2<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Assert<span class="token punctuation">.</span><span class="token function">assertNotEquals</span><span class="token punctuation">(</span>user1<span class="token punctuation">,</span>user2<span class="token punctuation">)</span><span class="token punctuation">;</span>            userMapper<span class="token punctuation">.</span><span class="token function">deleteUserById</span><span class="token punctuation">(</span>2L<span class="token punctuation">)</span><span class="token punctuation">;</span>            SysUser user3 <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>1l<span class="token punctuation">)</span><span class="token punctuation">;</span>            Assert<span class="token punctuation">.</span><span class="token function">assertNotEquals</span><span class="token punctuation">(</span>user2<span class="token punctuation">,</span>user3<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user1 <span class="token operator">==</span> user2<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>user2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>测试该代码输出日志，结合日志分析代码</p><pre><code>DEBUG [main] -==&gt;  Preparing: select *from sys_user where id = ? DEBUG [main] -==&gt; Parameters: 1(Long)TRACE [main] -&lt;==    Columns: id, user_name, user_password, user_email, user_info, head_img, create_timeTRACE [main] -&lt;==        Row: 1, admin, 123456, admin@mybatis.tk, &lt;&lt;BLOB&gt;&gt;, &lt;&lt;BLOB&gt;&gt;, 2016-06-07 01:11:12DEBUG [main] -&lt;==      Total: 1truetrue开启新的sqlSessionDEBUG [main] -==&gt;  Preparing: select *from sys_user where id = ? DEBUG [main] -==&gt; Parameters: 1(Long)TRACE [main] -&lt;==    Columns: id, user_name, user_password, user_email, user_info, head_img, create_timeTRACE [main] -&lt;==        Row: 1, admin, 123456, admin@mybatis.tk, &lt;&lt;BLOB&gt;&gt;, &lt;&lt;BLOB&gt;&gt;, 2016-06-07 01:11:12DEBUG [main] -&lt;==      Total: 1DEBUG [main] -==&gt;  Preparing: {call delete_user_by_id(?)} DEBUG [main] -==&gt; Parameters: 2(Long)DEBUG [main] -&lt;==    Updates: 0DEBUG [main] -==&gt;  Preparing: select *from sys_user where id = ? DEBUG [main] -==&gt; Parameters: 1(Long)TRACE [main] -&lt;==    Columns: id, user_name, user_password, user_email, user_info, head_img, create_timeTRACE [main] -&lt;==        Row: 1, admin, 123456, admin@mybatis.tk, &lt;&lt;BLOB&gt;&gt;, &lt;&lt;BLOB&gt;&gt;, 2016-06-07 01:11:12DEBUG [main] -&lt;==      Total: 1falsefalse</code></pre><p>​    可以看出在第一次执行selectById方法获取SysUser数据时，真正的执行了数据库的查询，得到了user1的结果，第二次执行获取user2的时候，可以看出只有一次查询 ，也就是第二次并没有执行数据库操作 。 也就是说明了user1和user2<strong>指向同一处地址 也就是同一个对象</strong>。即user1改变会影响到user2的改变</p><p>Mybatis的一级缓存存在于SqlSession的生命周期中，在同一个SqlSession中查询时，会把执行的方法和参数通过算法生成缓存的键值，存入到Map对象中。 反复执行同一个方法时，总是返回<strong>同一个对象</strong>，因此就会出现user1的重新赋值会影响到user2. 在使用中要注意避免出现如上错误。 那要怎么解决这个问题呢？</p><pre class=" language-java"><code class="language-java">    <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"selectById"</span> resultMap<span class="token operator">=</span><span class="token string">"userMap"</span> flushCache<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span>            select <span class="token operator">*</span> from sys_user where id <span class="token operator">=</span> #<span class="token punctuation">{</span>id<span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span></code></pre><p>加上<strong>flushCache=“true”</strong>，这个属性后会清空当前一级缓存。因此每次都会重新从数据库中查询数据，此时的user2和user1就会成为两个不同的实例了。<strong>一级缓存只存在于sqlsession的生命周期中。 insert，update，delete操作都会清空一级缓存</strong></p><h4 id="二级缓存"><a href="#二级缓存" class="headerlink" title="二级缓存"></a>二级缓存</h4><blockquote><p>MyBatis的二级缓存不同于一级缓存只存在于SqlSession的生命周期中，而是理解为存在于SqlSessionFactory的生命周期中。</p></blockquote><h5 id="配置二级缓存"><a href="#配置二级缓存" class="headerlink" title="配置二级缓存"></a>配置二级缓存</h5><p>​    在MyBatis的全局配置settings中有一个参数cacheEnabled，这个参数是二级缓存的全局开关，默认值是true。所以不用配置，如果想要配置，可以在mybatis-config.xml中添加一下代码。</p><pre><code> &lt;settings&gt;        &lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot;/&gt;    &lt;/settings&gt;</code></pre><p>MyBatis的二级缓存是和命名空间绑定的，即要配置在Mapper.xml映射文件中，或配置在Mapper.java接口中。只需在UserMapper.xml中添加<cache>元素即可。</cache></p><p><strong>默认的二级缓存会有如下效果。</strong></p><ul><li><p>映射语句文件中的所有 SELECT 语句将会被缓存 。</p></li><li><p>映射语句文件中的所有 时SERT 、 UPDATE 、 DELETE 语句会刷新缓存 。<br>缓存会使用 Least Recently Used ( LRU，最近最少使用的）算法来收回 。</p></li><li><p>根据时间表（如 no Flush Interval ，没有刷新间隔），缓存不会以任何时间顺序来刷新 。<br>缓存会存储集合或对象（无论查询方法返回什么类型的值）的 1024 个引用。</p></li><li><p>缓存会被视为 read/write （可读／可写）的 ， 意味着对象检索不是共享的，而且可以安全<br>地被调用者修改，而不干扰其他调用者或线程所做的潜在修改 。</p><p>所有的这些属性都可以通过缓存元素的属性来修改：</p><pre><code>&lt;cacheeviction＝ ” FIFO ”  //FIFO(先进先出) LRU(最近最少使用) SOFT(软引用) WEAK(弱引用)flushlnterval=” 60000”size=” 512 ”readOnly=” true &quot; /&gt;  </code></pre></li></ul><h5 id="使用二级缓存"><a href="#使用二级缓存" class="headerlink" title="使用二级缓存"></a>使用二级缓存</h5><p>​    先写一个测试（要求pojo需要实现Serializable接口）</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        SqlSession sqlSession <span class="token operator">=</span> <span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        SysRole role1<span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            RoleMapper roleMapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>RoleMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            role1 <span class="token operator">=</span> roleMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>1l<span class="token punctuation">)</span><span class="token punctuation">;</span>            role1<span class="token punctuation">.</span><span class="token function">setRoleName</span><span class="token punctuation">(</span><span class="token string">"New Name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            SysRole role2 <span class="token operator">=</span> roleMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>1l<span class="token punctuation">)</span><span class="token punctuation">;</span>            Assert<span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">"New Name"</span><span class="token punctuation">,</span> role2<span class="token punctuation">.</span><span class="token function">getRoleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Assert<span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>role1<span class="token punctuation">,</span>role2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开启新的sqlSession"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sqlSession <span class="token operator">=</span> <span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            RoleMapper roleMapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>RoleMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            SysRole role2 <span class="token operator">=</span> roleMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>1l<span class="token punctuation">)</span><span class="token punctuation">;</span>            Assert<span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">"New Name"</span><span class="token punctuation">,</span>role2<span class="token punctuation">.</span><span class="token function">getRoleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Assert<span class="token punctuation">.</span><span class="token function">assertNotEquals</span><span class="token punctuation">(</span>role1<span class="token punctuation">,</span>role2<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>role1<span class="token punctuation">.</span><span class="token function">getRoleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"------"</span> <span class="token operator">+</span> role2<span class="token punctuation">.</span><span class="token function">getRoleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            SysRole role3 <span class="token operator">=</span> roleMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>1l<span class="token punctuation">)</span><span class="token punctuation">;</span>            Assert<span class="token punctuation">.</span><span class="token function">assertNotEquals</span><span class="token punctuation">(</span>role2<span class="token punctuation">,</span>role3<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>role2<span class="token punctuation">.</span><span class="token function">getRoleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"------"</span> <span class="token operator">+</span> role3<span class="token punctuation">.</span><span class="token function">getRoleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>执行测试输出日志，内容如下</p><pre><code>DEBUG [main] -Cache Hit Ratio [tk.mybatis.simple.mapper.RoleMapper]: 0.0DEBUG [main] -==&gt;  Preparing: select *from sys_role where id = ? DEBUG [main] -==&gt; Parameters: 1(Long)TRACE [main] -&lt;==    Columns: id, role_name, enabled, create_by, create_timeTRACE [main] -&lt;==        Row: 1, 管理员, 1, 1, 2016-04-01 17:02:14DEBUG [main] -&lt;==      Total: 1DEBUG [main] -Cache Hit Ratio [tk.mybatis.simple.mapper.RoleMapper]: 0.0开启新的sqlSessionDEBUG [main] -Cache Hit Ratio [tk.mybatis.simple.mapper.RoleMapper]: 0.3333333333333333New Name------New NameDEBUG [main] -Cache Hit Ratio [tk.mybatis.simple.mapper.RoleMapper]: 0.5New Name------New Name</code></pre><p>在第一个try块中。在一个sqlsession中所以是一级缓存。当调用close方法关闭sqlsession时才会保存查询数据到二级缓存中。</p><p>在第二个try块中，再次获取role2时，日志并没有输出数据库查询，而是输出了命中率0.333333333333。这是第3次查询，并且得到了缓存值，一次被命中，所以命中率为三分之一。后面以此类推。</p><blockquote><p><strong><em>Mybatis默认提供缓存实现是基于Map实现的内存缓存。所以当需要缓存大量数据时就要选择一些类似Ehcache的框架或Redis缓存来保存二级缓存数据了。</em></strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MyBatis缓存&quot;&gt;&lt;a href=&quot;#MyBatis缓存&quot; class=&quot;headerlink&quot; title=&quot;MyBatis缓存&quot;&gt;&lt;/a&gt;MyBatis缓存&lt;/h2&gt;&lt;h4 id=&quot;一级缓存&quot;&gt;&lt;a href=&quot;#一级缓存&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="MyBatis" scheme="http://www.zhoulis.top/categories/MyBatis/"/>
    
    
      <category term="java" scheme="http://www.zhoulis.top/tags/java/"/>
    
      <category term="MyBatis" scheme="http://www.zhoulis.top/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>初识Spring(二)</title>
    <link href="http://www.zhoulis.top/spring2"/>
    <id>http://www.zhoulis.top/spring2</id>
    <published>2019-08-07T14:25:00.000Z</published>
    <updated>2019-08-22T07:48:50.842Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Beans-自动装配"><a href="#Spring-Beans-自动装配" class="headerlink" title="Spring Beans 自动装配"></a>Spring Beans 自动装配</h1><p>Spring容器可以在不使用 <constructor-arg>和<property> 元素的情况下自动装配相互协作的bean之间的关系， 这有助于减少编写一个大的基于Spring的应用程序的xml配置的数量。</property></constructor-arg></p><h4 id="自动装配模式："><a href="#自动装配模式：" class="headerlink" title="自动装配模式："></a>自动装配模式：</h4><pre><code>使用&lt;bean&gt;元素的autowire属性为一个bean定义指定自动装配模式。</code></pre><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>no</td><td>默认，它意味着没有自动装配</td></tr><tr><td>byName</td><td>由属性名自动装配</td></tr><tr><td>byType</td><td>由属性数据类型自动装配</td></tr><tr><td>constructor</td><td>类似于byType，但该类型适用于构造函数参数类型</td></tr><tr><td>autodetect</td><td>Spring先通过constructor自动装配来连接，如果不执行，Spring尝试通过byType来自动装配</td></tr></tbody></table><h1 id="Spring基于注解的配置"><a href="#Spring基于注解的配置" class="headerlink" title="Spring基于注解的配置"></a>Spring基于注解的配置</h1><pre><code>从Spring2.5开始就可以使用注解来配置依赖注入。可以使用相关类，方法或字段声明的注解，将bean配置移动到组件类本身。</code></pre><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>context<span class="token operator">:</span>annotation<span class="token operator">-</span>config<span class="token operator">/</span><span class="token operator">></span></code></pre><h4 id="Spring-Reqired-注释（已过时）"><a href="#Spring-Reqired-注释（已过时）" class="headerlink" title="Spring @Reqired 注释（已过时）"></a>Spring @Reqired 注释（已过时）</h4><pre><code>应用于bean属性的setter方法，它表明受影响的bean属性在配置时必须放在xml配置文件中，否则抛出BeanInitializationException异常。</code></pre><h4 id="Spring-Autowired-注释"><a href="#Spring-Autowired-注释" class="headerlink" title="Spring @Autowired 注释"></a>Spring @Autowired 注释</h4><p><strong>@Autowired</strong>注释对在哪里和如何完成自动连接提供了更多的细微的控制。</p><p><strong>@Autowried</strong>注解可以用在属性、构造函数、set方法中。在需要注入的类中添加@Autowried注解，在使用的时候，spring会自动加载类实例。</p><pre class=" language-java"><code class="language-java"> <span class="token annotation punctuation">@Autowired</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>使用required = false 就算没值也不会报错</p><h4 id="Spring-Resource注释"><a href="#Spring-Resource注释" class="headerlink" title="Spring @Resource注释"></a>Spring @Resource注释</h4><pre><code>可以在字段中或者setter方法中使用@Resource注释，它和在JavaEE5中的运作是一样的。@Resource注释使用一个‘name’属性， 该属性以一个bean名称形式被注入，它遵循byName自动连接语义。</code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Resource</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"..."</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setXxx</span><span class="token punctuation">(</span>Xxx xxx<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>如果没有明确指定一个‘name’，默认名称源于字段名或者setter方法。</p><h1 id="Spring基于Java的配置"><a href="#Spring基于Java的配置" class="headerlink" title="Spring基于Java的配置"></a>Spring基于Java的配置</h1><h4 id="Configuration-和-Bean-注解"><a href="#Configuration-和-Bean-注解" class="headerlink" title="@Configuration 和 @Bean 注解"></a><strong>@Configuration 和 @Bean 注解</strong></h4><p>带有@Configuration的注解表示这个类可以使用Spring IoC容器作为bean定义的来源。@Bean注解告诉Spring，一个带有@Bean的注解方法将返回一个对象，该对象应该被注册在Spring应用程序上下文的bean。</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorldConfig</span> <span class="token punctuation">{</span>   <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> HelloWorld <span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>带有@Bean注解的方法名称作为baen的ID，他创建并返回实际的bean。你的配置类可以申明多个@Bean。一旦定义了配置类，你就可以使用AnnotationConfigApplicationContext来加载并提供给Spring容器：</p><pre class=" language-java"><code class="language-java">ApplicationContext ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span>HelloWorldConfig<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这样就不用配置文件啦。</p><p> <strong>import注解</strong></p><pre><code>允许从另一个配置类中加载@Bean定义。</code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigA</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> A <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span>ConfigA<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigB</span> <span class="token punctuation">{</span>   <span class="token annotation punctuation">@Bean</span>   <span class="token keyword">public</span> B <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>这样实例化上下文时，就不要同时指定ConfigA和ConfigB了，只需提供ConfigB即可。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>   ApplicationContext ctx <span class="token operator">=</span>    <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span>ConfigB<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// ......</span>   A a <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>A<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   B b <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>B<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="Spring-中的事件处理"><a href="#Spring-中的事件处理" class="headerlink" title="Spring 中的事件处理"></a>Spring 中的事件处理</h1><p>Spring 提供了以下的标准事件：</p><table><thead><tr><th>序号</th><th align="center">Spring 内置事件 &amp; 描述</th></tr></thead><tbody><tr><td>1</td><td align="center"><strong>ContextRefreshedEvent</strong>             ApplicationContext 被初始化或刷新时，该事件被发布。这也可以在 ConfigurableApplicationContext 接口中使用 refresh() 方法来发生。</td></tr><tr><td>2</td><td align="center"><strong>ContextStartedEvent</strong>                 当使用 ConfigurableApplicationContext 接口中的 start() 方法启动 ApplicationContext 时，该事件被发布。你可以调查你的数据库，或者你可以在接受到这个事件后重启任何停止的应用程序。</td></tr><tr><td>3</td><td align="center">*<em>ContextStoppedEvent *</em>             当使用 ConfigurableApplicationContext 接口中的 stop() 方法停止 ApplicationContext 时，发布这个事件。你可以在接受到这个事件后做必要的清理的工作。</td></tr><tr><td>4</td><td align="center"><strong>ContextClosedEvent</strong>                当使用 ConfigurableApplicationContext 接口中的 close() 方法关闭 ApplicationContext 时，该事件被发布。一个已关闭的上下文到达生命周期末端；它不能被刷新或重启。</td></tr><tr><td>5</td><td align="center"><strong>RequestHandledEvent</strong>            这是一个 web-specific 事件，告诉所有 bean HTTP 请求已经被服务。</td></tr></tbody></table><h1 id="Spring-框架的-AOP"><a href="#Spring-框架的-AOP" class="headerlink" title="Spring 框架的 AOP"></a>Spring 框架的 AOP</h1><p>Spring 框架的一个关键组件是<strong>面向方向的编程</strong>（AOP）框架。面向方向的编程需要吧程序逻辑分解成不同的部分称为所谓的关注点。跨一个应用程序的多个点的功能被称为<strong>横切关注点</strong>，这些横切关注点在概念上独立于应用程序的业务逻辑。有各种各样的常见的很好的方面的例子，如日志记录、审计、声明式事务、安全性和缓存等。</p><p>在OOP中，关键单元模块是类，而在AOP中单元模块是方面。依赖注入帮助你对应用程序对象相互解耦和AOP可以帮助你从它们所影响的对象中对横切关注点解耦。AOP是像编程语言的触发物。</p><p>Spring AOP 模块提供拦截器来拦截一个应用程序，例如，当执行一个方法时，你可以在方法执行前和执行后添加额外的功能。</p><p><strong>AOP术语</strong></p><table><thead><tr><th>项</th><th align="center">描述</th></tr></thead><tbody><tr><td>Aspect</td><td align="center">一个模块具有一组提供横切需求的 APIs。例如，一个日志模块为了记录日志将被 AOP 方面调用。应用程序可以拥有任意数量的方面，这取决于需求。</td></tr><tr><td>Join point</td><td align="center">在你的应用程序中它代表一个点，你可以在插件 AOP 方面。你也能说，它是在实际的应用程序中，其中一个操作将使用 Spring AOP 框架。</td></tr><tr><td>Advice</td><td align="center">这是实际行动之前或之后执行的方法。这是在程序执行期间通过 Spring AOP 框架实际被调用的代码。</td></tr><tr><td>Pointcut</td><td align="center">这是一组一个或多个连接点，通知应该被执行。你可以使用表达式或模式指定切入点正如我们将在 AOP 的例子中看到的。</td></tr><tr><td>Introduction</td><td align="center">引用允许你添加新方法或属性到现有的类中。</td></tr><tr><td>Target object</td><td align="center">被一个或者多个方面所通知的对象，这个对象永远是一个被代理对象。也称为被通知对象。</td></tr><tr><td>Weaving</td><td align="center">Weaving 把方面连接到其它的应用程序类型或者对象上，并创建一个被通知的对象。这些可以在编译时，类加载时和运行时完成。</td></tr></tbody></table><h4 id="通过切点来选择连接点"><a href="#通过切点来选择连接点" class="headerlink" title="通过切点来选择连接点"></a>通过切点来选择连接点</h4><p>切点用于准确定位应该再什么地方应用切面的通知。通知和切面是切面的最基本元素。</p><p>在Spring AOP中，要使用AspectJ的切点表达式语言来定义切点。</p><p>关于Spring AOP的AspectJ切点，最重要的一点就是Spring仅支持ASpectJ切点指示器（pointcut designator）的一个子集。</p><pre><code>表： Spring借助AspectJ的切点表达式语言来定义Spring切面</code></pre><table><thead><tr><th>AspectJ指示器</th><th>描述</th></tr></thead><tbody><tr><td>arg()</td><td>限制连接点匹配参数为指定类型的执行方法</td></tr><tr><td>@arg()</td><td>限制连接点匹配参数由指定注解标注的执行方法</td></tr><tr><td>execution()</td><td>用于匹配是连接点的执行方法</td></tr><tr><td>this()</td><td>限制连接点匹配AOP代理的bean引用为指定类型的类</td></tr><tr><td>target</td><td>限制连接点匹配目标对象为指定类型的类</td></tr><tr><td>@target()</td><td>限制连接点匹配特定的执行对象，这些对象对应的类要具有指定类型的注解</td></tr><tr><td>within()</td><td>限制连接点匹配指定的类型</td></tr><tr><td>@winthin()</td><td>限制链接点匹配指定注解所标注的类型</td></tr><tr><td>@annotation</td><td>限定匹配带有指定注解的连接点</td></tr></tbody></table><h4 id="编写切点"><a href="#编写切点" class="headerlink" title="编写切点"></a>编写切点</h4><p>为了阐述Spring中的切面，我们需要有个主题来定义切面的切点。为此先定义一个Performance接口：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> concert<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Performance</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">perform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="定义切面"><a href="#定义切面" class="headerlink" title="定义切面"></a>定义切面</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> concert<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>AfterReturning<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>AfterThrowing<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Aspect<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Before<span class="token punctuation">;</span><span class="token annotation punctuation">@Aspect</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Audience</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"execution(**concert.Performance.perform(..))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">silenceCellPhones</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Sliencing cell phones"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"execution(**concert.Performance.perform(..))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">takeSeats</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Taking seats"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@AfterReturning</span><span class="token punctuation">(</span><span class="token string">"execution(**concert.Performance.perform(..))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">applause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"CLAP CLAP CLAP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@AfterThrowing</span><span class="token punctuation">(</span><span class="token string">"execution(**concert.Performance.perform(..))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">demandRefund</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Demanding a refund"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Spring-Beans-自动装配&quot;&gt;&lt;a href=&quot;#Spring-Beans-自动装配&quot; class=&quot;headerlink&quot; title=&quot;Spring Beans 自动装配&quot;&gt;&lt;/a&gt;Spring Beans 自动装配&lt;/h1&gt;&lt;p&gt;Spring容器可以
      
    
    </summary>
    
      <category term="Spring" scheme="http://www.zhoulis.top/categories/Spring/"/>
    
    
      <category term="java" scheme="http://www.zhoulis.top/tags/java/"/>
    
      <category term="Spring" scheme="http://www.zhoulis.top/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>初识Spring(一)</title>
    <link href="http://www.zhoulis.top/spring"/>
    <id>http://www.zhoulis.top/spring</id>
    <published>2019-08-07T01:25:00.000Z</published>
    <updated>2019-08-22T07:49:03.029Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Bean-作用域"><a href="#Spring-Bean-作用域" class="headerlink" title="Spring Bean 作用域"></a>Spring Bean 作用域</h1><ul><li><strong>singleton   单例模式：（默认值）在Spring IoC容器仅存在一个Bean实例</strong></li><li><strong>prototype  原型模式： 每次从容器中调用Bean都会返回一个新实例。</strong></li><li>request 请求模式：每次Http请求都会创建一个新的Bean，仅使用于WebApplicationContext环境</li><li>Session 会话模式：同一个Http Session 共享一个Bean， 不用的Session使用不同的Bean，仅使用于WebApplicationContext环境</li><li>global-session模式：一般用于Portlet应用环境，该运用仅使用于WebApplicationContext环境</li></ul><h4 id="singleton-作用域："><a href="#singleton-作用域：" class="headerlink" title="singleton 作用域："></a>singleton 作用域：</h4><p>​    singleton是单例类型， 就是在创建起容器就同时自动创建了一个bean对象， 不管你是否使用， 他都存在了， 每次获取到的对象都是同一个对象。</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>singleton<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- collaborators and configuration for this bean go here--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><h4 id="prototype-作用域："><a href="#prototype-作用域：" class="headerlink" title="prototype 作用域："></a>prototype 作用域：</h4><p>​    它再我们创建容器的时候并没有实例化，而是我们获取bean的时候才去创建一个对象，而且每次获取到的对象都不是同一个对象。</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prototype<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- collaborators and configuration for this bean go here--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><h1 id="Spring-Bean-生命周期"><a href="#Spring-Bean-生命周期" class="headerlink" title="Spring Bean 生命周期"></a>Spring Bean 生命周期</h1><blockquote><p>定义安装和拆卸一个bean，声明 init-method 和destroy-method参数的。</p><p>实例化bean时立即调用 init-methood 从容器中移除bean时调用 destroy-method</p><p>Bean的生命周期可以表达为：Bean的定义—–Bean的初始化—Bean的使用—–Bean的销毁</p></blockquote><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>singleton<span class="token punctuation">"</span></span>      <span class="token attr-name">init-method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">destory-method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- collaborators and configuration for this bean go here--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><h4 id="默认的初始化和销毁方法："><a href="#默认的初始化和销毁方法：" class="headerlink" title="默认的初始化和销毁方法："></a>默认的初始化和销毁方法：</h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd<span class="token punctuation">"</span></span>    <span class="token attr-name">default-init-method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>init<span class="token punctuation">"</span></span>     <span class="token attr-name">default-destroy-method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>destroy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!-- collaborators and configuration for this bean go here --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><h1 id="Spring-Bean-后置处理器"><a href="#Spring-Bean-后置处理器" class="headerlink" title="Spring Bean 后置处理器"></a>Spring Bean 后置处理器</h1><p>Bean后置处理器允许再调用初始化方法前后对bean进行额外的处理。</p><h4 id="BeanPostProcessor接口定义回调方法："><a href="#BeanPostProcessor接口定义回调方法：" class="headerlink" title="BeanPostProcessor接口定义回调方法："></a>BeanPostProcessor接口定义回调方法：</h4><p>​    可以实现该接口提供自己的实例化逻辑，依赖解析逻辑等。</p><p>可以通过BeanPostProcessor实现的Ordered接口提供的order属性来控制这些BeanPostProcessor接口的执行顺序。</p><p>ApplicationContext会自动检测由BeanPostProcessor接口定义的bean，注册这些bean为后置处理器，然后通过再容器中创建bean，在适当的时候调用它。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>chapter<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>BeansException<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>config<span class="token punctuation">.</span>BeanPostProcessor<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InitHelloWorld</span> <span class="token keyword">implements</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Object <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span>Object bean<span class="token punctuation">,</span> String beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> BeansException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"BeforeInitialization:"</span> <span class="token operator">+</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Object <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span>Object bean<span class="token punctuation">,</span> String beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> BeansException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"AfterInitialization:"</span> <span class="token operator">+</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="Spring-依赖注入"><a href="#Spring-依赖注入" class="headerlink" title="Spring 依赖注入"></a>Spring 依赖注入</h1><blockquote><p>依赖注入就是把类粘合在一起同时保持他们独立。</p></blockquote><p>通常使用类的构造函数或setter方法参数引入另一个类来保证互相的独立性。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TextEditor</span> <span class="token punctuation">{</span>   <span class="token keyword">private</span> SpellChecker spellChecker<span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token function">TextEditor</span><span class="token punctuation">(</span>SpellChecker spellChecker<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>spellChecker <span class="token operator">=</span> spellChecker<span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>这样只需将SpellChecker用作TextEditor的参数。然后实例化整个过程是由Spring框架的控制。</p><h4 id="Spring-基于构造函数的依赖注入"><a href="#Spring-基于构造函数的依赖注入" class="headerlink" title="Spring 基于构造函数的依赖注入"></a>Spring 基于构造函数的依赖注入</h4><blockquote><p>当容器调用带有一组参数的类构造函数时，基于构造函数的DI就完成了，其中每个参数代表一个对其他类的依赖。</p></blockquote><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>chapter<span class="token punctuation">.</span>editor<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpellChecker</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token function">SpellChecker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Inside SpellChecker Constructor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">CheckSpelling</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Inside CheckSpell"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>chapter<span class="token punctuation">.</span>editor<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TextEditor</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> SpellChecker spellChecker<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">TextEditor</span><span class="token punctuation">(</span>SpellChecker spellChecker<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Inside TextEditor Constructor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>spellChecker <span class="token operator">=</span> spellChecker<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">SpellCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        spellChecker<span class="token punctuation">.</span><span class="token function">CheckSpelling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>chapter<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>chapter<span class="token punctuation">.</span>editor<span class="token punctuation">.</span>TextEditor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>AbstractApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainApp</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        AbstractApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"Beans.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TextEditor textEditor <span class="token operator">=</span> <span class="token punctuation">(</span>TextEditor<span class="token punctuation">)</span>context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"textEditor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        textEditor<span class="token punctuation">.</span><span class="token function">SpellCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.aop.chapter.editor.TextEditor<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textEditor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>spellChecker<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.aop.chapter.editor.SpellChecker<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>spellChecker<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><h4 id="Spring-基于setter函数的依赖注入"><a href="#Spring-基于setter函数的依赖注入" class="headerlink" title="Spring 基于setter函数的依赖注入"></a>Spring 基于setter函数的依赖注入</h4><p>将上文的构造函数改为setter函数 &amp;&amp; 将<bean>标签中的<constructor-arg>元素改为 <property>元素 注意:引用的是对象的话要用<strong>ref</strong>，若直接传值的话用<strong>value</strong>属性。</property></constructor-arg></bean></p><h4 id="Spring-注入内部Beans"><a href="#Spring-注入内部Beans" class="headerlink" title="Spring 注入内部Beans"></a>Spring 注入内部Beans</h4><p>在java中内部类是在其它类中定义的一个类，同理，inner beans是在其他bean中定义的bean –&gt;称为内部bean，例如：</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"..."</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"..."</span><span class="token operator">></span>    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"..."</span><span class="token operator">></span>        <span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"..."</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"..."</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>property<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Spring-Bean-作用域&quot;&gt;&lt;a href=&quot;#Spring-Bean-作用域&quot; class=&quot;headerlink&quot; title=&quot;Spring Bean 作用域&quot;&gt;&lt;/a&gt;Spring Bean 作用域&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;sing
      
    
    </summary>
    
      <category term="Spring" scheme="http://www.zhoulis.top/categories/Spring/"/>
    
    
      <category term="java" scheme="http://www.zhoulis.top/tags/java/"/>
    
      <category term="Spring" scheme="http://www.zhoulis.top/tags/Spring/"/>
    
  </entry>
  
</feed>
